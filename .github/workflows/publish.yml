#file: noinspection SpellCheckingInspection
# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

run-name: "release: v1.4.3 - 1.20.2"

name: publish
on: workflow_dispatch

env:
  VERSION: 1.4.3
  MC_VERSION: "1.20.2"
  MC_VERSION_RANGE: |
    1.20
    1.20.1
    1.20.2
  VERSION_TYPE: release
  CURSEFORGE_ID: 361354
  MODRINTH_ID: "IQRVlbit"

jobs:
  build:
    strategy:
      matrix:
        java: [ 17 ]
        os: [ windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew

      - name: "Run gradle task: (forge) -> datagen"
        run: ./gradlew :neoforge:Data

      - name: build
        run: ./gradlew build

      - name: capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }} # Only upload artifacts built from the latest java on one OS
        uses: actions/upload-artifact@v3
        with:
          name: Artifacts
          path: |
            forge/build/libs/
            neoforge/build/libs/
            fabric/build/libs/

      # PUBLISH FABRIC TASK
      - name: publish FABRIC
        if: ${{ runner.os != 'Linux' }}
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: ${{env.MODRINTH_ID}}
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          modrinth-featured: true
          modrinth-unfeature-mode: intersection

          curseforge-id: ${{env.CURSEFORGE_ID}}
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}

          files: fabric/build/libs/!(*-@(dev|sources|javadoc)).jar

          name: "v${{env.VERSION}} (${{env.MC_VERSION}}) FABRIC"
          version: "${{env.VERSION}}"
          version-type: "${{env.VERSION_TYPE}}"
          changelog-file: changelog.md

          loaders: |
            fabric
          game-versions: ${{env.MC_VERSION_RANGE}}

          java: ${{ matrix.java }}

          retry-attempts: 2
          retry-delay: 10000
          fail-mode: warn

      # PUBLISH FORGE TASK
      - name: publish FORGE
        if: ${{ runner.os != 'Linux' }}
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: ${{env.MODRINTH_ID}}
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          modrinth-featured: true
          modrinth-unfeature-mode: intersection

          curseforge-id: ${{env.CURSEFORGE_ID}}
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}

          files: forge/build/libs/!(*-@(dev|sources|javadoc)).jar

          name: "v${{env.VERSION}} (${{env.MC_VERSION}}) FORGE"
          version: "${{env.VERSION}}"
          version-type: "${{env.VERSION_TYPE}}"
          changelog-file: changelog.md

          loaders: |
            forge
          game-versions: ${{env.MC_VERSION_RANGE}}

          java: ${{ matrix.java }}

          retry-attempts: 2
          retry-delay: 10000
          fail-mode: warn

      # PUBLISH NEOFORGE TASK
      - name: publish NEOFORGE
        if: ${{ runner.os != 'Linux' }}
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: ${{env.MODRINTH_ID}}
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          modrinth-featured: true
          modrinth-unfeature-mode: intersection

          curseforge-id: ${{env.CURSEFORGE_ID}}
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}

          files: neoforge/build/libs/!(*-@(dev|sources|javadoc)).jar

          name: "v${{env.VERSION}} (${{env.MC_VERSION}}) NEOFORGE"
          version: "${{env.VERSION}}"
          version-type: "${{env.VERSION_TYPE}}"
          changelog-file: changelog.md

          loaders: |
            neoforge
          game-versions: ${{env.MC_VERSION_RANGE}}

          java: ${{ matrix.java }}

          retry-attempts: 2
          retry-delay: 10000
          fail-mode: warn