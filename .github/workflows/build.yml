# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on: [ pull_request, push ]

env:
  RELEASE_NAME: v1.3.1 (1.20)
  JAVA_VERSION: 17
  VERSION_TYPE: alpha

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [ 17 ] # Current Java LTS & minimum supported by Minecraft
        os: [ ubuntu-latest, windows-latest ]  # and run on both Linux and Windows
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew

      - name: build
        run: ./gradlew build

      - name: capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }} # Only upload artifacts built from the latest java on one OS
        uses: actions/upload-artifact@v3
        with:
          name: Artifacts
          path: |
            forge/build/libs/
            fabric/build/libs/

      # PUBLISH FABRIC TASK
      - name: publish FABRIC
        if: ${{ runner.os != 'Linux' }}
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          modrinth-featured: true
          modrinth-unfeature-mode: intersection

          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}

          files: fabric/build/libs/!(*-@(dev|sources|javadoc)).jar

          name: "${{env.RELEASE_NAME}}"
          version: "${{env.VERSION}}"
          version-type: "${{env.VERSION_TYPE}}"
          changelog-file: changelog.md

          java: ${{ matrix.java }}

          retry-attempts: 2
          retry-delay: 10000
          fail-mode: warn

      # PUBLISH FORGE TASK
      - name: publish FORGE
        if: ${{ runner.os != 'Linux' }}
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          modrinth-featured: true
          modrinth-unfeature-mode: intersection

          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}

          files: forge/build/libs/!(*-@(dev|sources|javadoc)).jar

          name: "${{env.RELEASE_NAME}}"
          version: "${{env.VERSION}}"
          version-type: "${{env.VERSION_TYPE}}"
          changelog-file: changelog.md

          java: ${{ matrix.java }}

          retry-attempts: 2
          retry-delay: 10000
          fail-mode: warn
