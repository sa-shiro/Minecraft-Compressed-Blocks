#file: noinspection SpellCheckingInspection
# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

run-name: "v1.4.3 - 1.20.2"

name: build
on: [ push, pull_request, workflow_dispatch ]

jobs:
  build:
    strategy:
      matrix:
        java: [ 17 ] # Current Java LTS & minimum supported by Minecraft
        os: [ ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      # Chekout Repo
      - name: checkout repository
        uses: actions/checkout@v3

      # Validate gradle wrapper
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

        # Setup JDKs
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      # Make gradle wrapper executable (linux)
      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew

      # Run DataGenerator (forge)
      - name: "Run gradle task: (neoforge) -> datagen"
        run: ./gradlew :neoforge:runData

      # Build Project (common, forge, neoforge, fabric)
      - name: build
        run: ./gradlew build

      # Capture bould artifacts
      - name: capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }}
        uses: actions/upload-artifact@v3
        with:
          name: Artifacts
          path: |
            forge/build/libs/
            neoforge/build/libs/
            fabric/build/libs/