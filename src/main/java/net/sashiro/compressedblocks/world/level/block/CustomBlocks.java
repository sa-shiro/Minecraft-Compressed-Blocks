package net.sashiro.compressedblocks.world.level.block;

import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.state.BlockBehaviour;
import net.minecraft.world.level.material.Material;
import net.minecraft.world.level.material.MaterialColor;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.registries.RegistryObject;
import net.sashiro.compressedblocks.CompressedBlocks;

import static net.sashiro.compressedblocks.event.ModRegistryEvent.BLOCKS;
import static net.sashiro.compressedblocks.world.level.block.CustomBlock.*;

@Mod.EventBusSubscriber(modid = CompressedBlocks.MOD_ID)
public class CustomBlocks {
    public static final float[] HARDNESS = {5.0F, 8.5F, 10.0F, 15.5F, 25.0F, 35.5F, 50.5F, 65.5F, 75.0F, 90.0F};
    public static final float[] RESISTANCE = {35.5F, 75.0F, 150.0F, 300.0F, 600.0F, 800.0F, 1250.0F, 2000.0F, 5000.0F, 7500.0F};
    
    public static final RegistryObject<Block> LOGO_BLOCK = BLOCKS.register("logo_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE)));
    public static final RegistryObject<Block> STONE_0 = BLOCKS.register("c0_stone", () -> new CustomDefaultBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops(), 0));
    public static final RegistryObject<Block> STONE_1 = BLOCKS.register("c1_stone", () -> new CustomDefaultBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops(), 1));
    public static final RegistryObject<Block> STONE_2 = BLOCKS.register("c2_stone", () -> new CustomDefaultBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops(), 2));
    public static final RegistryObject<Block> STONE_3 = BLOCKS.register("c3_stone", () -> new CustomDefaultBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops(), 3));
    public static final RegistryObject<Block> STONE_4 = BLOCKS.register("c4_stone", () -> new CustomDefaultBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops(), 4));
    public static final RegistryObject<Block> STONE_5 = BLOCKS.register("c5_stone", () -> new CustomDefaultBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops(), 5));
    public static final RegistryObject<Block> STONE_6 = BLOCKS.register("c6_stone", () -> new CustomDefaultBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops(), 6));
    public static final RegistryObject<Block> STONE_7 = BLOCKS.register("c7_stone", () -> new CustomDefaultBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops(), 7));
    public static final RegistryObject<Block> STONE_8 = BLOCKS.register("c8_stone", () -> new CustomDefaultBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops(), 8));
    public static final RegistryObject<Block> STONE_9 = BLOCKS.register("c9_stone", () -> new CustomDefaultBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops(), 9));
    public static final RegistryObject<Block> GRANITE_0 = BLOCKS.register("c0_granite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GRANITE_1 = BLOCKS.register("c1_granite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GRANITE_2 = BLOCKS.register("c2_granite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GRANITE_3 = BLOCKS.register("c3_granite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GRANITE_4 = BLOCKS.register("c4_granite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GRANITE_5 = BLOCKS.register("c5_granite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GRANITE_6 = BLOCKS.register("c6_granite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GRANITE_7 = BLOCKS.register("c7_granite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GRANITE_8 = BLOCKS.register("c8_granite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GRANITE_9 = BLOCKS.register("c9_granite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DIORITE_0 = BLOCKS.register("c0_diorite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DIORITE_1 = BLOCKS.register("c1_diorite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.QUARTZ).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DIORITE_2 = BLOCKS.register("c2_diorite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.QUARTZ).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DIORITE_3 = BLOCKS.register("c3_diorite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.QUARTZ).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DIORITE_4 = BLOCKS.register("c4_diorite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.QUARTZ).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DIORITE_5 = BLOCKS.register("c5_diorite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.QUARTZ).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DIORITE_6 = BLOCKS.register("c6_diorite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.QUARTZ).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DIORITE_7 = BLOCKS.register("c7_diorite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.QUARTZ).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DIORITE_8 = BLOCKS.register("c8_diorite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.QUARTZ).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DIORITE_9 = BLOCKS.register("c9_diorite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.QUARTZ).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ANDESITE_0 = BLOCKS.register("c0_andesite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ANDESITE_1 = BLOCKS.register("c1_andesite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ANDESITE_2 = BLOCKS.register("c2_andesite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ANDESITE_3 = BLOCKS.register("c3_andesite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ANDESITE_4 = BLOCKS.register("c4_andesite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ANDESITE_5 = BLOCKS.register("c5_andesite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ANDESITE_6 = BLOCKS.register("c6_andesite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ANDESITE_7 = BLOCKS.register("c7_andesite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ANDESITE_8 = BLOCKS.register("c8_andesite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ANDESITE_9 = BLOCKS.register("c9_andesite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DIRT_0 = BLOCKS.register("c0_dirt", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.DIRT).strength(HARDNESS[2], RESISTANCE[0])));
    public static final RegistryObject<Block> DIRT_1 = BLOCKS.register("c1_dirt", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.DIRT).strength(HARDNESS[2], RESISTANCE[0])));
    public static final RegistryObject<Block> DIRT_2 = BLOCKS.register("c2_dirt", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.DIRT).strength(HARDNESS[3], RESISTANCE[1])));
    public static final RegistryObject<Block> DIRT_3 = BLOCKS.register("c3_dirt", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.DIRT).strength(HARDNESS[3], RESISTANCE[1])));
    public static final RegistryObject<Block> DIRT_4 = BLOCKS.register("c4_dirt", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.DIRT).strength(HARDNESS[4], RESISTANCE[2])));
    public static final RegistryObject<Block> DIRT_5 = BLOCKS.register("c5_dirt", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.DIRT).strength(HARDNESS[4], RESISTANCE[2])));
    public static final RegistryObject<Block> DIRT_6 = BLOCKS.register("c6_dirt", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.DIRT).strength(HARDNESS[5], RESISTANCE[3])));
    public static final RegistryObject<Block> DIRT_7 = BLOCKS.register("c7_dirt", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.DIRT).strength(HARDNESS[5], RESISTANCE[3])));
    public static final RegistryObject<Block> DIRT_8 = BLOCKS.register("c8_dirt", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.DIRT).strength(HARDNESS[6], RESISTANCE[4])));
    public static final RegistryObject<Block> DIRT_9 = BLOCKS.register("c9_dirt", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.DIRT).strength(HARDNESS[6], RESISTANCE[4])));
    public static final RegistryObject<Block> CRIMSON_NYLIUM_0 = BLOCKS.register("c0_crimson_nylium", () -> new CustomNyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.CRIMSON_NYLIUM).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops(), 0));
    public static final RegistryObject<Block> CRIMSON_NYLIUM_1 = BLOCKS.register("c1_crimson_nylium", () -> new CustomNyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.CRIMSON_NYLIUM).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops(), 1));
    public static final RegistryObject<Block> CRIMSON_NYLIUM_2 = BLOCKS.register("c2_crimson_nylium", () -> new CustomNyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.CRIMSON_NYLIUM).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops(), 2));
    public static final RegistryObject<Block> CRIMSON_NYLIUM_3 = BLOCKS.register("c3_crimson_nylium", () -> new CustomNyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.CRIMSON_NYLIUM).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops(), 3));
    public static final RegistryObject<Block> CRIMSON_NYLIUM_4 = BLOCKS.register("c4_crimson_nylium", () -> new CustomNyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.CRIMSON_NYLIUM).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops(), 4));
    public static final RegistryObject<Block> CRIMSON_NYLIUM_5 = BLOCKS.register("c5_crimson_nylium", () -> new CustomNyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.CRIMSON_NYLIUM).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops(), 5));
    public static final RegistryObject<Block> CRIMSON_NYLIUM_6 = BLOCKS.register("c6_crimson_nylium", () -> new CustomNyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.CRIMSON_NYLIUM).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops(), 6));
    public static final RegistryObject<Block> CRIMSON_NYLIUM_7 = BLOCKS.register("c7_crimson_nylium", () -> new CustomNyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.CRIMSON_NYLIUM).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops(), 7));
    public static final RegistryObject<Block> CRIMSON_NYLIUM_8 = BLOCKS.register("c8_crimson_nylium", () -> new CustomNyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.CRIMSON_NYLIUM).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops(), 8));
    public static final RegistryObject<Block> CRIMSON_NYLIUM_9 = BLOCKS.register("c9_crimson_nylium", () -> new CustomNyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.CRIMSON_NYLIUM).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops(), 9));
    public static final RegistryObject<Block> WARPED_NYLIUM_0 = BLOCKS.register("c0_warped_nylium", () -> new CustomNyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.WARPED_NYLIUM).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops(), 0));
    public static final RegistryObject<Block> WARPED_NYLIUM_1 = BLOCKS.register("c1_warped_nylium", () -> new CustomNyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.WARPED_NYLIUM).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops(), 1));
    public static final RegistryObject<Block> WARPED_NYLIUM_2 = BLOCKS.register("c2_warped_nylium", () -> new CustomNyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.WARPED_NYLIUM).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops(), 2));
    public static final RegistryObject<Block> WARPED_NYLIUM_3 = BLOCKS.register("c3_warped_nylium", () -> new CustomNyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.WARPED_NYLIUM).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops(), 3));
    public static final RegistryObject<Block> WARPED_NYLIUM_4 = BLOCKS.register("c4_warped_nylium", () -> new CustomNyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.WARPED_NYLIUM).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops(), 4));
    public static final RegistryObject<Block> WARPED_NYLIUM_5 = BLOCKS.register("c5_warped_nylium", () -> new CustomNyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.WARPED_NYLIUM).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops(), 5));
    public static final RegistryObject<Block> WARPED_NYLIUM_6 = BLOCKS.register("c6_warped_nylium", () -> new CustomNyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.WARPED_NYLIUM).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops(), 6));
    public static final RegistryObject<Block> WARPED_NYLIUM_7 = BLOCKS.register("c7_warped_nylium", () -> new CustomNyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.WARPED_NYLIUM).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops(), 7));
    public static final RegistryObject<Block> WARPED_NYLIUM_8 = BLOCKS.register("c8_warped_nylium", () -> new CustomNyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.WARPED_NYLIUM).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops(), 8));
    public static final RegistryObject<Block> WARPED_NYLIUM_9 = BLOCKS.register("c9_warped_nylium", () -> new CustomNyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.WARPED_NYLIUM).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops(), 9));
    public static final RegistryObject<Block> COBBLESTONE_0 = BLOCKS.register("c0_cobblestone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_1 = BLOCKS.register("c1_cobblestone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_2 = BLOCKS.register("c2_cobblestone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_3 = BLOCKS.register("c3_cobblestone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_4 = BLOCKS.register("c4_cobblestone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_5 = BLOCKS.register("c5_cobblestone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_6 = BLOCKS.register("c6_cobblestone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_7 = BLOCKS.register("c7_cobblestone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_8 = BLOCKS.register("c8_cobblestone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_9 = BLOCKS.register("c9_cobblestone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> CLAY_0 = BLOCKS.register("c0_clay", () -> new Block(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.CLAY).strength(HARDNESS[2], RESISTANCE[0])));
    public static final RegistryObject<Block> CLAY_1 = BLOCKS.register("c1_clay", () -> new Block(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.CLAY).strength(HARDNESS[2], RESISTANCE[0])));
    public static final RegistryObject<Block> CLAY_2 = BLOCKS.register("c2_clay", () -> new Block(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.CLAY).strength(HARDNESS[3], RESISTANCE[1])));
    public static final RegistryObject<Block> CLAY_3 = BLOCKS.register("c3_clay", () -> new Block(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.CLAY).strength(HARDNESS[3], RESISTANCE[1])));
    public static final RegistryObject<Block> CLAY_4 = BLOCKS.register("c4_clay", () -> new Block(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.CLAY).strength(HARDNESS[4], RESISTANCE[2])));
    public static final RegistryObject<Block> CLAY_5 = BLOCKS.register("c5_clay", () -> new Block(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.CLAY).strength(HARDNESS[4], RESISTANCE[2])));
    public static final RegistryObject<Block> CLAY_6 = BLOCKS.register("c6_clay", () -> new Block(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.CLAY).strength(HARDNESS[5], RESISTANCE[3])));
    public static final RegistryObject<Block> CLAY_7 = BLOCKS.register("c7_clay", () -> new Block(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.CLAY).strength(HARDNESS[5], RESISTANCE[3])));
    public static final RegistryObject<Block> CLAY_8 = BLOCKS.register("c8_clay", () -> new Block(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.CLAY).strength(HARDNESS[6], RESISTANCE[4])));
    public static final RegistryObject<Block> CLAY_9 = BLOCKS.register("c9_clay", () -> new Block(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.CLAY).strength(HARDNESS[6], RESISTANCE[4])));
    public static final RegistryObject<Block> SAND_0 = BLOCKS.register("c0_sand", () -> new CustomSandBlock(14406560, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.SAND).strength(HARDNESS[2], RESISTANCE[0]), 0));
    public static final RegistryObject<Block> SAND_2 = BLOCKS.register("c2_sand", () -> new CustomSandBlock(14406560, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.SAND).strength(HARDNESS[2], RESISTANCE[0]), 0));
    public static final RegistryObject<Block> SAND_1 = BLOCKS.register("c1_sand", () -> new CustomSandBlock(14406560, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.SAND).strength(HARDNESS[3], RESISTANCE[1]), 2));
    public static final RegistryObject<Block> SAND_3 = BLOCKS.register("c3_sand", () -> new CustomSandBlock(14406560, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.SAND).strength(HARDNESS[3], RESISTANCE[1]), 3));
    public static final RegistryObject<Block> SAND_4 = BLOCKS.register("c4_sand", () -> new CustomSandBlock(14406560, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.SAND).strength(HARDNESS[4], RESISTANCE[2]), 4));
    public static final RegistryObject<Block> SAND_5 = BLOCKS.register("c5_sand", () -> new CustomSandBlock(14406560, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.SAND).strength(HARDNESS[4], RESISTANCE[2]), 5));
    public static final RegistryObject<Block> SAND_6 = BLOCKS.register("c6_sand", () -> new CustomSandBlock(14406560, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.SAND).strength(HARDNESS[5], RESISTANCE[3]), 6));
    public static final RegistryObject<Block> SAND_7 = BLOCKS.register("c7_sand", () -> new CustomSandBlock(14406560, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.SAND).strength(HARDNESS[5], RESISTANCE[3]), 7));
    public static final RegistryObject<Block> SAND_8 = BLOCKS.register("c8_sand", () -> new CustomSandBlock(14406560, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.SAND).strength(HARDNESS[6], RESISTANCE[4]), 8));
    public static final RegistryObject<Block> SAND_9 = BLOCKS.register("c9_sand", () -> new CustomSandBlock(14406560, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.SAND).strength(HARDNESS[6], RESISTANCE[4]), 9));
    public static final RegistryObject<Block> RED_SAND_0 = BLOCKS.register("c0_red_sand", () -> new CustomSandBlock(11098145, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_ORANGE).strength(HARDNESS[2], RESISTANCE[0]), 0));
    public static final RegistryObject<Block> RED_SAND_1 = BLOCKS.register("c1_red_sand", () -> new CustomSandBlock(11098145, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_ORANGE).strength(HARDNESS[2], RESISTANCE[0]), 1));
    public static final RegistryObject<Block> RED_SAND_2 = BLOCKS.register("c2_red_sand", () -> new CustomSandBlock(11098145, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_ORANGE).strength(HARDNESS[3], RESISTANCE[1]), 2));
    public static final RegistryObject<Block> RED_SAND_3 = BLOCKS.register("c3_red_sand", () -> new CustomSandBlock(11098145, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_ORANGE).strength(HARDNESS[3], RESISTANCE[1]), 3));
    public static final RegistryObject<Block> RED_SAND_4 = BLOCKS.register("c4_red_sand", () -> new CustomSandBlock(11098145, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_ORANGE).strength(HARDNESS[4], RESISTANCE[2]), 4));
    public static final RegistryObject<Block> RED_SAND_5 = BLOCKS.register("c5_red_sand", () -> new CustomSandBlock(11098145, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_ORANGE).strength(HARDNESS[4], RESISTANCE[2]), 5));
    public static final RegistryObject<Block> RED_SAND_6 = BLOCKS.register("c6_red_sand", () -> new CustomSandBlock(11098145, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_ORANGE).strength(HARDNESS[5], RESISTANCE[3]), 6));
    public static final RegistryObject<Block> RED_SAND_7 = BLOCKS.register("c7_red_sand", () -> new CustomSandBlock(11098145, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_ORANGE).strength(HARDNESS[5], RESISTANCE[3]), 7));
    public static final RegistryObject<Block> RED_SAND_8 = BLOCKS.register("c8_red_sand", () -> new CustomSandBlock(11098145, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_ORANGE).strength(HARDNESS[6], RESISTANCE[4]), 8));
    public static final RegistryObject<Block> RED_SAND_9 = BLOCKS.register("c9_red_sand", () -> new CustomSandBlock(11098145, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_ORANGE).strength(HARDNESS[6], RESISTANCE[4]), 9));
    public static final RegistryObject<Block> GRAVEL_0 = BLOCKS.register("c0_gravel", () -> new CustomGravelBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.STONE).strength(HARDNESS[2], RESISTANCE[0]), 0));
    public static final RegistryObject<Block> GRAVEL_1 = BLOCKS.register("c1_gravel", () -> new CustomGravelBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.STONE).strength(HARDNESS[2], RESISTANCE[0]), 1));
    public static final RegistryObject<Block> GRAVEL_2 = BLOCKS.register("c2_gravel", () -> new CustomGravelBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.STONE).strength(HARDNESS[3], RESISTANCE[1]), 2));
    public static final RegistryObject<Block> GRAVEL_3 = BLOCKS.register("c3_gravel", () -> new CustomGravelBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.STONE).strength(HARDNESS[3], RESISTANCE[1]), 3));
    public static final RegistryObject<Block> GRAVEL_4 = BLOCKS.register("c4_gravel", () -> new CustomGravelBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.STONE).strength(HARDNESS[4], RESISTANCE[2]), 4));
    public static final RegistryObject<Block> GRAVEL_5 = BLOCKS.register("c5_gravel", () -> new CustomGravelBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.STONE).strength(HARDNESS[4], RESISTANCE[2]), 5));
    public static final RegistryObject<Block> GRAVEL_6 = BLOCKS.register("c6_gravel", () -> new CustomGravelBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.STONE).strength(HARDNESS[5], RESISTANCE[3]), 6));
    public static final RegistryObject<Block> GRAVEL_7 = BLOCKS.register("c7_gravel", () -> new CustomGravelBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.STONE).strength(HARDNESS[5], RESISTANCE[3]), 7));
    public static final RegistryObject<Block> GRAVEL_8 = BLOCKS.register("c8_gravel", () -> new CustomGravelBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.STONE).strength(HARDNESS[6], RESISTANCE[4]), 8));
    public static final RegistryObject<Block> GRAVEL_9 = BLOCKS.register("c9_gravel", () -> new CustomGravelBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.STONE).strength(HARDNESS[6], RESISTANCE[4]), 9));
    public static final RegistryObject<Block> SANDSTONE_0 = BLOCKS.register("c0_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SANDSTONE_1 = BLOCKS.register("c1_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SANDSTONE_2 = BLOCKS.register("c2_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SANDSTONE_3 = BLOCKS.register("c3_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SANDSTONE_4 = BLOCKS.register("c4_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SANDSTONE_5 = BLOCKS.register("c5_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SANDSTONE_6 = BLOCKS.register("c6_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SANDSTONE_7 = BLOCKS.register("c7_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SANDSTONE_8 = BLOCKS.register("c8_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SANDSTONE_9 = BLOCKS.register("c9_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> RED_SANDSTONE_0 = BLOCKS.register("c0_red_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> RED_SANDSTONE_1 = BLOCKS.register("c1_red_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> RED_SANDSTONE_2 = BLOCKS.register("c2_red_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> RED_SANDSTONE_3 = BLOCKS.register("c3_red_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> RED_SANDSTONE_4 = BLOCKS.register("c4_red_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> RED_SANDSTONE_5 = BLOCKS.register("c5_red_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> RED_SANDSTONE_6 = BLOCKS.register("c6_red_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> RED_SANDSTONE_7 = BLOCKS.register("c7_red_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> RED_SANDSTONE_8 = BLOCKS.register("c8_red_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> RED_SANDSTONE_9 = BLOCKS.register("c9_red_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COAL_ORE_0 = BLOCKS.register("c0_coal_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops(), 0));
    public static final RegistryObject<Block> COAL_ORE_1 = BLOCKS.register("c1_coal_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops(), 1));
    public static final RegistryObject<Block> COAL_ORE_2 = BLOCKS.register("c2_coal_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops(), 2));
    public static final RegistryObject<Block> COAL_ORE_3 = BLOCKS.register("c3_coal_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops(), 3));
    public static final RegistryObject<Block> COAL_ORE_4 = BLOCKS.register("c4_coal_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops(), 4));
    public static final RegistryObject<Block> COAL_ORE_5 = BLOCKS.register("c5_coal_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops(), 5));
    public static final RegistryObject<Block> COAL_ORE_6 = BLOCKS.register("c6_coal_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops(), 6));
    public static final RegistryObject<Block> COAL_ORE_7 = BLOCKS.register("c7_coal_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops(), 7));
    public static final RegistryObject<Block> COAL_ORE_8 = BLOCKS.register("c8_coal_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops(), 8));
    public static final RegistryObject<Block> COAL_ORE_9 = BLOCKS.register("c9_coal_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops(), 9));
    public static final RegistryObject<Block> IRON_ORE_0 = BLOCKS.register("c0_iron_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops(), 0));
    public static final RegistryObject<Block> IRON_ORE_1 = BLOCKS.register("c1_iron_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops(), 1));
    public static final RegistryObject<Block> IRON_ORE_2 = BLOCKS.register("c2_iron_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops(), 2));
    public static final RegistryObject<Block> IRON_ORE_3 = BLOCKS.register("c3_iron_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops(), 3));
    public static final RegistryObject<Block> IRON_ORE_4 = BLOCKS.register("c4_iron_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops(), 4));
    public static final RegistryObject<Block> IRON_ORE_5 = BLOCKS.register("c5_iron_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops(), 5));
    public static final RegistryObject<Block> IRON_ORE_6 = BLOCKS.register("c6_iron_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops(), 6));
    public static final RegistryObject<Block> IRON_ORE_7 = BLOCKS.register("c7_iron_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops(), 7));
    public static final RegistryObject<Block> IRON_ORE_8 = BLOCKS.register("c8_iron_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops(), 8));
    public static final RegistryObject<Block> IRON_ORE_9 = BLOCKS.register("c9_iron_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops(), 9));
    public static final RegistryObject<Block> GOLD_ORE_0 = BLOCKS.register("c0_gold_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops(), 0));
    public static final RegistryObject<Block> GOLD_ORE_1 = BLOCKS.register("c1_gold_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops(), 1));
    public static final RegistryObject<Block> GOLD_ORE_2 = BLOCKS.register("c2_gold_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops(), 2));
    public static final RegistryObject<Block> GOLD_ORE_3 = BLOCKS.register("c3_gold_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops(), 3));
    public static final RegistryObject<Block> GOLD_ORE_4 = BLOCKS.register("c4_gold_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops(), 4));
    public static final RegistryObject<Block> GOLD_ORE_5 = BLOCKS.register("c5_gold_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops(), 5));
    public static final RegistryObject<Block> GOLD_ORE_6 = BLOCKS.register("c6_gold_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops(), 6));
    public static final RegistryObject<Block> GOLD_ORE_7 = BLOCKS.register("c7_gold_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops(), 7));
    public static final RegistryObject<Block> GOLD_ORE_8 = BLOCKS.register("c8_gold_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops(), 8));
    public static final RegistryObject<Block> GOLD_ORE_9 = BLOCKS.register("c9_gold_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops(), 9));
    public static final RegistryObject<Block> NETHER_GOLD_ORE_0 = BLOCKS.register("c0_nether_gold_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops(), 0));
    public static final RegistryObject<Block> NETHER_GOLD_ORE_1 = BLOCKS.register("c1_nether_gold_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops(), 1));
    public static final RegistryObject<Block> NETHER_GOLD_ORE_2 = BLOCKS.register("c2_nether_gold_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops(), 2));
    public static final RegistryObject<Block> NETHER_GOLD_ORE_3 = BLOCKS.register("c3_nether_gold_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops(), 3));
    public static final RegistryObject<Block> NETHER_GOLD_ORE_4 = BLOCKS.register("c4_nether_gold_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops(), 4));
    public static final RegistryObject<Block> NETHER_GOLD_ORE_5 = BLOCKS.register("c5_nether_gold_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops(), 5));
    public static final RegistryObject<Block> NETHER_GOLD_ORE_6 = BLOCKS.register("c6_nether_gold_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops(), 6));
    public static final RegistryObject<Block> NETHER_GOLD_ORE_7 = BLOCKS.register("c7_nether_gold_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops(), 7));
    public static final RegistryObject<Block> NETHER_GOLD_ORE_8 = BLOCKS.register("c8_nether_gold_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops(), 8));
    public static final RegistryObject<Block> NETHER_GOLD_ORE_9 = BLOCKS.register("c9_nether_gold_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops(), 9));
    public static final RegistryObject<Block> NETHER_QUARTZ_ORE_0 = BLOCKS.register("c0_nether_quartz_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops(), 0));
    public static final RegistryObject<Block> NETHER_QUARTZ_ORE_1 = BLOCKS.register("c1_nether_quartz_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops(), 1));
    public static final RegistryObject<Block> NETHER_QUARTZ_ORE_2 = BLOCKS.register("c2_nether_quartz_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops(), 2));
    public static final RegistryObject<Block> NETHER_QUARTZ_ORE_3 = BLOCKS.register("c3_nether_quartz_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops(), 3));
    public static final RegistryObject<Block> NETHER_QUARTZ_ORE_4 = BLOCKS.register("c4_nether_quartz_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops(), 4));
    public static final RegistryObject<Block> NETHER_QUARTZ_ORE_5 = BLOCKS.register("c5_nether_quartz_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops(), 5));
    public static final RegistryObject<Block> NETHER_QUARTZ_ORE_6 = BLOCKS.register("c6_nether_quartz_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops(), 6));
    public static final RegistryObject<Block> NETHER_QUARTZ_ORE_7 = BLOCKS.register("c7_nether_quartz_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops(), 7));
    public static final RegistryObject<Block> NETHER_QUARTZ_ORE_8 = BLOCKS.register("c8_nether_quartz_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops(), 8));
    public static final RegistryObject<Block> NETHER_QUARTZ_ORE_9 = BLOCKS.register("c9_nether_quartz_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops(), 9));
    public static final RegistryObject<Block> LAPIS_ORE_0 = BLOCKS.register("c0_lapis_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops(), 0));
    public static final RegistryObject<Block> LAPIS_ORE_1 = BLOCKS.register("c1_lapis_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops(), 1));
    public static final RegistryObject<Block> LAPIS_ORE_2 = BLOCKS.register("c2_lapis_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops(), 2));
    public static final RegistryObject<Block> LAPIS_ORE_3 = BLOCKS.register("c3_lapis_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops(), 3));
    public static final RegistryObject<Block> LAPIS_ORE_4 = BLOCKS.register("c4_lapis_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops(), 4));
    public static final RegistryObject<Block> LAPIS_ORE_5 = BLOCKS.register("c5_lapis_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops(), 5));
    public static final RegistryObject<Block> LAPIS_ORE_6 = BLOCKS.register("c6_lapis_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops(), 6));
    public static final RegistryObject<Block> LAPIS_ORE_7 = BLOCKS.register("c7_lapis_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops(), 7));
    public static final RegistryObject<Block> LAPIS_ORE_8 = BLOCKS.register("c8_lapis_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops(), 8));
    public static final RegistryObject<Block> LAPIS_ORE_9 = BLOCKS.register("c9_lapis_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops(), 9));
    public static final RegistryObject<Block> REDSTONE_ORE_0 = BLOCKS.register("c0_redstone_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops(), 0));
    public static final RegistryObject<Block> REDSTONE_ORE_1 = BLOCKS.register("c1_redstone_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops() ,1));
    public static final RegistryObject<Block> REDSTONE_ORE_2 = BLOCKS.register("c2_redstone_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops(), 2));
    public static final RegistryObject<Block> REDSTONE_ORE_3 = BLOCKS.register("c3_redstone_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops(),3));
    public static final RegistryObject<Block> REDSTONE_ORE_4 = BLOCKS.register("c4_redstone_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops(), 4));
    public static final RegistryObject<Block> REDSTONE_ORE_5 = BLOCKS.register("c5_redstone_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops(), 5));
    public static final RegistryObject<Block> REDSTONE_ORE_6 = BLOCKS.register("c6_redstone_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops(), 6));
    public static final RegistryObject<Block> REDSTONE_ORE_7 = BLOCKS.register("c7_redstone_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops(), 7));
    public static final RegistryObject<Block> REDSTONE_ORE_8 = BLOCKS.register("c8_redstone_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops(), 8));
    public static final RegistryObject<Block> REDSTONE_ORE_9 = BLOCKS.register("c9_redstone_ore", () -> new CustomOreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops(), 9));
    public static final RegistryObject<Block> IRON_BLOCK_0 = BLOCKS.register("c0_iron_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> IRON_BLOCK_1 = BLOCKS.register("c1_iron_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> IRON_BLOCK_2 = BLOCKS.register("c2_iron_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> IRON_BLOCK_3 = BLOCKS.register("c3_iron_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> IRON_BLOCK_4 = BLOCKS.register("c4_iron_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> IRON_BLOCK_5 = BLOCKS.register("c5_iron_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> IRON_BLOCK_6 = BLOCKS.register("c6_iron_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> IRON_BLOCK_7 = BLOCKS.register("c7_iron_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> IRON_BLOCK_8 = BLOCKS.register("c8_iron_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> IRON_BLOCK_9 = BLOCKS.register("c9_iron_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GOLD_BLOCK_0 = BLOCKS.register("c0_gold_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GOLD_BLOCK_1 = BLOCKS.register("c1_gold_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GOLD_BLOCK_2 = BLOCKS.register("c2_gold_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GOLD_BLOCK_3 = BLOCKS.register("c3_gold_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GOLD_BLOCK_4 = BLOCKS.register("c4_gold_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GOLD_BLOCK_5 = BLOCKS.register("c5_gold_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GOLD_BLOCK_6 = BLOCKS.register("c6_gold_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GOLD_BLOCK_7 = BLOCKS.register("c7_gold_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GOLD_BLOCK_8 = BLOCKS.register("c8_gold_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GOLD_BLOCK_9 = BLOCKS.register("c9_gold_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> LAPIS_BLOCK_0 = BLOCKS.register("c0_lapis_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> LAPIS_BLOCK_1 = BLOCKS.register("c1_lapis_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> LAPIS_BLOCK_2 = BLOCKS.register("c2_lapis_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> LAPIS_BLOCK_3 = BLOCKS.register("c3_lapis_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> LAPIS_BLOCK_4 = BLOCKS.register("c4_lapis_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> LAPIS_BLOCK_5 = BLOCKS.register("c5_lapis_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> LAPIS_BLOCK_6 = BLOCKS.register("c6_lapis_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> LAPIS_BLOCK_7 = BLOCKS.register("c7_lapis_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> LAPIS_BLOCK_8 = BLOCKS.register("c8_lapis_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> LAPIS_BLOCK_9 = BLOCKS.register("c9_lapis_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> REDSTONE_BLOCK_0 = BLOCKS.register("c0_redstone_block", () -> new CustomRedstoneTorchBlock(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops(), 0));
    public static final RegistryObject<Block> REDSTONE_BLOCK_1 = BLOCKS.register("c1_redstone_block", () -> new CustomRedstoneTorchBlock(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops(), 1));
    public static final RegistryObject<Block> REDSTONE_BLOCK_2 = BLOCKS.register("c2_redstone_block", () -> new CustomRedstoneTorchBlock(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops(), 2));
    public static final RegistryObject<Block> REDSTONE_BLOCK_3 = BLOCKS.register("c3_redstone_block", () -> new CustomRedstoneTorchBlock(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops(), 3));
    public static final RegistryObject<Block> REDSTONE_BLOCK_4 = BLOCKS.register("c4_redstone_block", () -> new CustomRedstoneTorchBlock(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops(), 4));
    public static final RegistryObject<Block> REDSTONE_BLOCK_5 = BLOCKS.register("c5_redstone_block", () -> new CustomRedstoneTorchBlock(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops(), 5));
    public static final RegistryObject<Block> REDSTONE_BLOCK_6 = BLOCKS.register("c6_redstone_block", () -> new CustomRedstoneTorchBlock(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops(), 6));
    public static final RegistryObject<Block> REDSTONE_BLOCK_7 = BLOCKS.register("c7_redstone_block", () -> new CustomRedstoneTorchBlock(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops(), 7));
    public static final RegistryObject<Block> REDSTONE_BLOCK_8 = BLOCKS.register("c8_redstone_block", () -> new CustomRedstoneTorchBlock(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops(), 8));
    public static final RegistryObject<Block> REDSTONE_BLOCK_9 = BLOCKS.register("c9_redstone_block", () -> new CustomRedstoneTorchBlock(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops(), 9));
    public static final RegistryObject<Block> COAL_BLOCK_0 = BLOCKS.register("c0_coal_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COAL_BLOCK_1 = BLOCKS.register("c1_coal_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COAL_BLOCK_2 = BLOCKS.register("c2_coal_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COAL_BLOCK_3 = BLOCKS.register("c3_coal_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COAL_BLOCK_4 = BLOCKS.register("c4_coal_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COAL_BLOCK_5 = BLOCKS.register("c5_coal_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COAL_BLOCK_6 = BLOCKS.register("c6_coal_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COAL_BLOCK_7 = BLOCKS.register("c7_coal_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COAL_BLOCK_8 = BLOCKS.register("c8_coal_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COAL_BLOCK_9 = BLOCKS.register("c9_coal_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SLIME_BLOCK_0 = BLOCKS.register("c0_slime_block", () -> new CustomSlimeBlock(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.GRASS).strength(HARDNESS[2], RESISTANCE[0]).noOcclusion(), 0));
    public static final RegistryObject<Block> SLIME_BLOCK_1 = BLOCKS.register("c1_slime_block", () -> new CustomSlimeBlock(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.GRASS).strength(HARDNESS[2], RESISTANCE[0]).noOcclusion(), 1));
    public static final RegistryObject<Block> SLIME_BLOCK_2 = BLOCKS.register("c2_slime_block", () -> new CustomSlimeBlock(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.GRASS).strength(HARDNESS[3], RESISTANCE[1]).noOcclusion(), 2));
    public static final RegistryObject<Block> SLIME_BLOCK_3 = BLOCKS.register("c3_slime_block", () -> new CustomSlimeBlock(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.GRASS).strength(HARDNESS[3], RESISTANCE[1]).noOcclusion(), 3));
    public static final RegistryObject<Block> SLIME_BLOCK_4 = BLOCKS.register("c4_slime_block", () -> new CustomSlimeBlock(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.GRASS).strength(HARDNESS[4], RESISTANCE[2]).noOcclusion(), 4));
    public static final RegistryObject<Block> SLIME_BLOCK_5 = BLOCKS.register("c5_slime_block", () -> new CustomSlimeBlock(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.GRASS).strength(HARDNESS[4], RESISTANCE[2]).noOcclusion(), 5));
    public static final RegistryObject<Block> SLIME_BLOCK_6 = BLOCKS.register("c6_slime_block", () -> new CustomSlimeBlock(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.GRASS).strength(HARDNESS[5], RESISTANCE[3]).noOcclusion(), 6));
    public static final RegistryObject<Block> SLIME_BLOCK_7 = BLOCKS.register("c7_slime_block", () -> new CustomSlimeBlock(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.GRASS).strength(HARDNESS[5], RESISTANCE[3]).noOcclusion(), 7));
    public static final RegistryObject<Block> SLIME_BLOCK_8 = BLOCKS.register("c8_slime_block", () -> new CustomSlimeBlock(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.GRASS).strength(HARDNESS[6], RESISTANCE[4]).noOcclusion(), 8));
    public static final RegistryObject<Block> SLIME_BLOCK_9 = BLOCKS.register("c9_slime_block", () -> new CustomSlimeBlock(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.GRASS).strength(HARDNESS[6], RESISTANCE[4]).noOcclusion(),9));
    public static final RegistryObject<Block> BRICKS_0 = BLOCKS.register("c0_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> BRICKS_1 = BLOCKS.register("c1_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> BRICKS_2 = BLOCKS.register("c2_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> BRICKS_3 = BLOCKS.register("c3_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> BRICKS_4 = BLOCKS.register("c4_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> BRICKS_5 = BLOCKS.register("c5_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> BRICKS_6 = BLOCKS.register("c6_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> BRICKS_7 = BLOCKS.register("c7_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> BRICKS_8 = BLOCKS.register("c8_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> BRICKS_9 = BLOCKS.register("c9_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_BRICKS_0 = BLOCKS.register("c0_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_BRICKS_1 = BLOCKS.register("c1_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_BRICKS_2 = BLOCKS.register("c2_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_BRICKS_3 = BLOCKS.register("c3_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_BRICKS_4 = BLOCKS.register("c4_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_BRICKS_5 = BLOCKS.register("c5_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_BRICKS_6 = BLOCKS.register("c6_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_BRICKS_7 = BLOCKS.register("c7_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_BRICKS_8 = BLOCKS.register("c8_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_BRICKS_9 = BLOCKS.register("c9_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHERRACK_0 = BLOCKS.register("c0_netherrack", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHERRACK_1 = BLOCKS.register("c1_netherrack", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHERRACK_2 = BLOCKS.register("c2_netherrack", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHERRACK_3 = BLOCKS.register("c3_netherrack", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHERRACK_4 = BLOCKS.register("c4_netherrack", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHERRACK_5 = BLOCKS.register("c5_netherrack", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHERRACK_6 = BLOCKS.register("c6_netherrack", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHERRACK_7 = BLOCKS.register("c7_netherrack", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHERRACK_8 = BLOCKS.register("c8_netherrack", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHERRACK_9 = BLOCKS.register("c9_netherrack", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHER_BRICKS_0 = BLOCKS.register("c0_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHER_BRICKS_1 = BLOCKS.register("c1_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHER_BRICKS_2 = BLOCKS.register("c2_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHER_BRICKS_3 = BLOCKS.register("c3_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHER_BRICKS_4 = BLOCKS.register("c4_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHER_BRICKS_5 = BLOCKS.register("c5_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHER_BRICKS_6 = BLOCKS.register("c6_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHER_BRICKS_7 = BLOCKS.register("c7_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHER_BRICKS_8 = BLOCKS.register("c8_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHER_BRICKS_9 = BLOCKS.register("c9_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> RED_NETHER_BRICKS_0 = BLOCKS.register("c0_red_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> RED_NETHER_BRICKS_1 = BLOCKS.register("c1_red_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> RED_NETHER_BRICKS_2 = BLOCKS.register("c2_red_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> RED_NETHER_BRICKS_3 = BLOCKS.register("c3_red_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> RED_NETHER_BRICKS_4 = BLOCKS.register("c4_red_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> RED_NETHER_BRICKS_5 = BLOCKS.register("c5_red_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> RED_NETHER_BRICKS_6 = BLOCKS.register("c6_red_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> RED_NETHER_BRICKS_7 = BLOCKS.register("c7_red_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> RED_NETHER_BRICKS_8 = BLOCKS.register("c8_red_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> RED_NETHER_BRICKS_9 = BLOCKS.register("c9_red_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(HARDNESS[9], RESISTANCE[9])));
    public static final RegistryObject<Block> NETHER_WART_BLOCK_0 = BLOCKS.register("c0_nether_wart_block", () -> new Block(BlockBehaviour.Properties.of(Material.GRASS, MaterialColor.COLOR_RED).strength(HARDNESS[2], RESISTANCE[0])));
    public static final RegistryObject<Block> NETHER_WART_BLOCK_1 = BLOCKS.register("c1_nether_wart_block", () -> new Block(BlockBehaviour.Properties.of(Material.GRASS, MaterialColor.COLOR_RED).strength(HARDNESS[2], RESISTANCE[0])));
    public static final RegistryObject<Block> NETHER_WART_BLOCK_2 = BLOCKS.register("c2_nether_wart_block", () -> new Block(BlockBehaviour.Properties.of(Material.GRASS, MaterialColor.COLOR_RED).strength(HARDNESS[3], RESISTANCE[1])));
    public static final RegistryObject<Block> NETHER_WART_BLOCK_3 = BLOCKS.register("c3_nether_wart_block", () -> new Block(BlockBehaviour.Properties.of(Material.GRASS, MaterialColor.COLOR_RED).strength(HARDNESS[3], RESISTANCE[1])));
    public static final RegistryObject<Block> NETHER_WART_BLOCK_4 = BLOCKS.register("c4_nether_wart_block", () -> new Block(BlockBehaviour.Properties.of(Material.GRASS, MaterialColor.COLOR_RED).strength(HARDNESS[4], RESISTANCE[2])));
    public static final RegistryObject<Block> NETHER_WART_BLOCK_5 = BLOCKS.register("c5_nether_wart_block", () -> new Block(BlockBehaviour.Properties.of(Material.GRASS, MaterialColor.COLOR_RED).strength(HARDNESS[4], RESISTANCE[2])));
    public static final RegistryObject<Block> NETHER_WART_BLOCK_6 = BLOCKS.register("c6_nether_wart_block", () -> new Block(BlockBehaviour.Properties.of(Material.GRASS, MaterialColor.COLOR_RED).strength(HARDNESS[5], RESISTANCE[3])));
    public static final RegistryObject<Block> NETHER_WART_BLOCK_7 = BLOCKS.register("c7_nether_wart_block", () -> new Block(BlockBehaviour.Properties.of(Material.GRASS, MaterialColor.COLOR_RED).strength(HARDNESS[5], RESISTANCE[3])));
    public static final RegistryObject<Block> NETHER_WART_BLOCK_8 = BLOCKS.register("c8_nether_wart_block", () -> new Block(BlockBehaviour.Properties.of(Material.GRASS, MaterialColor.COLOR_RED).strength(HARDNESS[6], RESISTANCE[4])));
    public static final RegistryObject<Block> NETHER_WART_BLOCK_9 = BLOCKS.register("c9_nether_wart_block", () -> new Block(BlockBehaviour.Properties.of(Material.GRASS, MaterialColor.COLOR_RED).strength(HARDNESS[6], RESISTANCE[4])));
    public static final RegistryObject<Block> SOUL_SAND_0 = BLOCKS.register("c0_soul_sand", () -> new CustomSoulSandBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops(), 0));
    public static final RegistryObject<Block> SOUL_SAND_1 = BLOCKS.register("c1_soul_sand", () -> new CustomSoulSandBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops(), 1));
    public static final RegistryObject<Block> SOUL_SAND_2 = BLOCKS.register("c2_soul_sand", () -> new CustomSoulSandBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops(), 2));
    public static final RegistryObject<Block> SOUL_SAND_3 = BLOCKS.register("c3_soul_sand", () -> new CustomSoulSandBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops(), 3));
    public static final RegistryObject<Block> SOUL_SAND_4 = BLOCKS.register("c4_soul_sand", () -> new CustomSoulSandBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops(), 4));
    public static final RegistryObject<Block> SOUL_SAND_5 = BLOCKS.register("c5_soul_sand", () -> new CustomSoulSandBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops(), 5));
    public static final RegistryObject<Block> SOUL_SAND_6 = BLOCKS.register("c6_soul_sand", () -> new CustomSoulSandBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops(), 6));
    public static final RegistryObject<Block> SOUL_SAND_7 = BLOCKS.register("c7_soul_sand", () -> new CustomSoulSandBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops(), 7));
    public static final RegistryObject<Block> SOUL_SAND_8 = BLOCKS.register("c8_soul_sand", () -> new CustomSoulSandBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops(), 8));
    public static final RegistryObject<Block> SOUL_SAND_9 = BLOCKS.register("c9_soul_sand", () -> new CustomSoulSandBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops(), 9));
    public static final RegistryObject<Block> SOUL_SOIL_0 = BLOCKS.register("c0_soul_soil", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.COLOR_BROWN).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SOUL_SOIL_1 = BLOCKS.register("c1_soul_soil", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.COLOR_BROWN).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SOUL_SOIL_2 = BLOCKS.register("c2_soul_soil", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.COLOR_BROWN).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SOUL_SOIL_3 = BLOCKS.register("c3_soul_soil", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.COLOR_BROWN).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SOUL_SOIL_4 = BLOCKS.register("c4_soul_soil", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.COLOR_BROWN).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SOUL_SOIL_5 = BLOCKS.register("c5_soul_soil", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.COLOR_BROWN).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SOUL_SOIL_6 = BLOCKS.register("c6_soul_soil", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.COLOR_BROWN).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SOUL_SOIL_7 = BLOCKS.register("c7_soul_soil", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.COLOR_BROWN).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SOUL_SOIL_8 = BLOCKS.register("c8_soul_soil", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.COLOR_BROWN).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SOUL_SOIL_9 = BLOCKS.register("c9_soul_soil", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.COLOR_BROWN).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> END_STONE_0 = BLOCKS.register("c0_end_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> END_STONE_1 = BLOCKS.register("c1_end_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> END_STONE_2 = BLOCKS.register("c2_end_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> END_STONE_3 = BLOCKS.register("c3_end_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> END_STONE_4 = BLOCKS.register("c4_end_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> END_STONE_5 = BLOCKS.register("c5_end_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> END_STONE_6 = BLOCKS.register("c6_end_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> END_STONE_7 = BLOCKS.register("c7_end_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> END_STONE_8 = BLOCKS.register("c8_end_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> END_STONE_9 = BLOCKS.register("c9_end_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> END_STONE_BRICKS_0 = BLOCKS.register("c0_end_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> END_STONE_BRICKS_1 = BLOCKS.register("c1_end_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> END_STONE_BRICKS_2 = BLOCKS.register("c2_end_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> END_STONE_BRICKS_3 = BLOCKS.register("c3_end_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> END_STONE_BRICKS_4 = BLOCKS.register("c4_end_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> END_STONE_BRICKS_5 = BLOCKS.register("c5_end_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> END_STONE_BRICKS_6 = BLOCKS.register("c6_end_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> END_STONE_BRICKS_7 = BLOCKS.register("c7_end_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> END_STONE_BRICKS_8 = BLOCKS.register("c8_end_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> END_STONE_BRICKS_9 = BLOCKS.register("c9_end_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> BLACKSTONE_0 = BLOCKS.register("c0_blackstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> BLACKSTONE_1 = BLOCKS.register("c1_blackstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> BLACKSTONE_2 = BLOCKS.register("c2_blackstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> BLACKSTONE_3 = BLOCKS.register("c3_blackstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> BLACKSTONE_4 = BLOCKS.register("c4_blackstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> BLACKSTONE_5 = BLOCKS.register("c5_blackstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> BLACKSTONE_6 = BLOCKS.register("c6_blackstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> BLACKSTONE_7 = BLOCKS.register("c7_blackstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> BLACKSTONE_8 = BLOCKS.register("c8_blackstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> BLACKSTONE_9 = BLOCKS.register("c9_blackstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DEEPSLATE_0 = BLOCKS.register("c0_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DEEPSLATE_1 = BLOCKS.register("c1_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DEEPSLATE_2 = BLOCKS.register("c2_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DEEPSLATE_3 = BLOCKS.register("c3_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DEEPSLATE_4 = BLOCKS.register("c4_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DEEPSLATE_5 = BLOCKS.register("c5_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DEEPSLATE_6 = BLOCKS.register("c6_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DEEPSLATE_7 = BLOCKS.register("c7_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DEEPSLATE_8 = BLOCKS.register("c8_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DEEPSLATE_9 = BLOCKS.register("c9_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops()));

    public static final RegistryObject<Block> COBBLED_DEEPSLATE_0 = BLOCKS.register("c0_cobbled_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLED_DEEPSLATE_1 = BLOCKS.register("c1_cobbled_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLED_DEEPSLATE_2 = BLOCKS.register("c2_cobbled_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLED_DEEPSLATE_3 = BLOCKS.register("c3_cobbled_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLED_DEEPSLATE_4 = BLOCKS.register("c4_cobbled_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLED_DEEPSLATE_5 = BLOCKS.register("c5_cobbled_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLED_DEEPSLATE_6 = BLOCKS.register("c6_cobbled_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLED_DEEPSLATE_7 = BLOCKS.register("c7_cobbled_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLED_DEEPSLATE_8 = BLOCKS.register("c8_cobbled_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLED_DEEPSLATE_9 = BLOCKS.register("c9_cobbled_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> TUFF_0 = BLOCKS.register("c0_tuff", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> TUFF_1 = BLOCKS.register("c1_tuff", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> TUFF_2 = BLOCKS.register("c2_tuff", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> TUFF_3 = BLOCKS.register("c3_tuff", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> TUFF_4 = BLOCKS.register("c4_tuff", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> TUFF_5 = BLOCKS.register("c5_tuff", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> TUFF_6 = BLOCKS.register("c6_tuff", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> TUFF_7 = BLOCKS.register("c7_tuff", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> TUFF_8 = BLOCKS.register("c8_tuff", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> TUFF_9 = BLOCKS.register("c9_tuff", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> BASALT_0 = BLOCKS.register("c0_basalt", () -> new CustomRotatedPillarBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[0], RESISTANCE[0]).requiresCorrectToolForDrops(), 0));
    public static final RegistryObject<Block> BASALT_1 = BLOCKS.register("c1_basalt", () -> new CustomRotatedPillarBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[1], RESISTANCE[1]).requiresCorrectToolForDrops(), 1));
    public static final RegistryObject<Block> BASALT_2 = BLOCKS.register("c2_basalt", () -> new CustomRotatedPillarBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[2], RESISTANCE[2]).requiresCorrectToolForDrops(), 2));
    public static final RegistryObject<Block> BASALT_3 = BLOCKS.register("c3_basalt", () -> new CustomRotatedPillarBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[3], RESISTANCE[3]).requiresCorrectToolForDrops(), 3));
    public static final RegistryObject<Block> BASALT_4 = BLOCKS.register("c4_basalt", () -> new CustomRotatedPillarBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[4], RESISTANCE[4]).requiresCorrectToolForDrops(), 4));
    public static final RegistryObject<Block> BASALT_5 = BLOCKS.register("c5_basalt", () -> new CustomRotatedPillarBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[5], RESISTANCE[5]).requiresCorrectToolForDrops(), 5));
    public static final RegistryObject<Block> BASALT_6 = BLOCKS.register("c6_basalt", () -> new CustomRotatedPillarBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[6], RESISTANCE[6]).requiresCorrectToolForDrops(), 6));
    public static final RegistryObject<Block> BASALT_7 = BLOCKS.register("c7_basalt", () -> new CustomRotatedPillarBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[7], RESISTANCE[7]).requiresCorrectToolForDrops(), 7));
    public static final RegistryObject<Block> BASALT_8 = BLOCKS.register("c8_basalt", () -> new CustomRotatedPillarBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[8], RESISTANCE[8]).requiresCorrectToolForDrops(), 8));
    public static final RegistryObject<Block> BASALT_9 = BLOCKS.register("c9_basalt", () -> new CustomRotatedPillarBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(HARDNESS[9], RESISTANCE[9]).requiresCorrectToolForDrops(), 9));

}
