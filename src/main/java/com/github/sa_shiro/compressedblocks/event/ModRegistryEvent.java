package com.github.sa_shiro.compressedblocks.event;

import com.github.sa_shiro.compressedblocks.CompressedBlocks;
import com.github.sa_shiro.compressedblocks.item.BagItem;
import com.github.sa_shiro.compressedblocks.util.ItemGroups;
import net.minecraft.client.renderer.ItemBlockRenderTypes;
import net.minecraft.client.renderer.RenderType;
import net.minecraft.world.item.BlockItem;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.Items;
import net.minecraft.world.level.block.*;
import net.minecraft.world.level.block.state.BlockBehaviour;
import net.minecraft.world.level.material.Material;
import net.minecraft.world.level.material.MaterialColor;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.eventbus.api.IEventBus;
import net.minecraftforge.fml.DistExecutor;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.RegistryObject;

import java.util.ArrayList;

public class ModRegistryEvent {
    public static final DeferredRegister<Block> BLOCKS = DeferredRegister.create(ForgeRegistries.BLOCKS, CompressedBlocks.MOD_ID);
    public static final DeferredRegister<Block> BLOCKS2 = DeferredRegister.create(ForgeRegistries.BLOCKS, CompressedBlocks.MOD_ID);
    public static final DeferredRegister<Item> ITEMS = DeferredRegister.create(ForgeRegistries.ITEMS, CompressedBlocks.MOD_ID);
    private static final IEventBus eventBus = FMLJavaModLoadingContext.get().getModEventBus();
    private static final Item.Properties PROPERTIES = new Item.Properties().tab(ItemGroups.compressedBlockGroup);
    public static final RegistryObject<Block> LOGO_BLOCK = BLOCKS.register("logo_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE)));
    public static final RegistryObject<Item> LOGO_BLOCK_ITEM = ITEMS.register("logo_block", () -> new BlockItem(LOGO_BLOCK.get(), PROPERTIES));
    public static final RegistryObject<Block> STONE_0 = BLOCKS.register("c0_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> STONE_0_ITEM = ITEMS.register("c0_stone", () -> new BlockItem(STONE_0.get(), PROPERTIES));
    public static final RegistryObject<Block> STONE_1 = BLOCKS.register("c1_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> STONE_1_ITEM = ITEMS.register("c1_stone", () -> new BlockItem(STONE_1.get(), PROPERTIES));
    public static final RegistryObject<Block> STONE_2 = BLOCKS.register("c2_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> STONE_2_ITEM = ITEMS.register("c2_stone", () -> new BlockItem(STONE_2.get(), PROPERTIES));
    public static final RegistryObject<Block> STONE_3 = BLOCKS.register("c3_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> STONE_3_ITEM = ITEMS.register("c3_stone", () -> new BlockItem(STONE_3.get(), PROPERTIES));
    public static final RegistryObject<Block> STONE_4 = BLOCKS.register("c4_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> STONE_4_ITEM = ITEMS.register("c4_stone", () -> new BlockItem(STONE_4.get(), PROPERTIES));
    public static final RegistryObject<Block> STONE_5 = BLOCKS.register("c5_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> STONE_5_ITEM = ITEMS.register("c5_stone", () -> new BlockItem(STONE_5.get(), PROPERTIES));
    public static final RegistryObject<Block> STONE_6 = BLOCKS.register("c6_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> STONE_6_ITEM = ITEMS.register("c6_stone", () -> new BlockItem(STONE_6.get(), PROPERTIES));
    public static final RegistryObject<Block> STONE_7 = BLOCKS.register("c7_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> STONE_7_ITEM = ITEMS.register("c7_stone", () -> new BlockItem(STONE_7.get(), PROPERTIES));
    public static final RegistryObject<Block> STONE_8 = BLOCKS.register("c8_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> STONE_8_ITEM = ITEMS.register("c8_stone", () -> new BlockItem(STONE_8.get(), PROPERTIES));
    public static final RegistryObject<Block> STONE_9 = BLOCKS.register("c9_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> STONE_9_ITEM = ITEMS.register("c9_stone", () -> new BlockItem(STONE_9.get(), PROPERTIES));
    public static final RegistryObject<Block> GRANITE_0 = BLOCKS.register("c0_granite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GRANITE_0_ITEM = ITEMS.register("c0_granite", () -> new BlockItem(GRANITE_0.get(), PROPERTIES));
    public static final RegistryObject<Block> GRANITE_1 = BLOCKS.register("c1_granite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GRANITE_1_ITEM = ITEMS.register("c1_granite", () -> new BlockItem(GRANITE_1.get(), PROPERTIES));
    public static final RegistryObject<Block> GRANITE_2 = BLOCKS.register("c2_granite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GRANITE_2_ITEM = ITEMS.register("c2_granite", () -> new BlockItem(GRANITE_2.get(), PROPERTIES));
    public static final RegistryObject<Block> GRANITE_3 = BLOCKS.register("c3_granite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GRANITE_3_ITEM = ITEMS.register("c3_granite", () -> new BlockItem(GRANITE_3.get(), PROPERTIES));
    public static final RegistryObject<Block> GRANITE_4 = BLOCKS.register("c4_granite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GRANITE_4_ITEM = ITEMS.register("c4_granite", () -> new BlockItem(GRANITE_4.get(), PROPERTIES));
    public static final RegistryObject<Block> GRANITE_5 = BLOCKS.register("c5_granite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GRANITE_5_ITEM = ITEMS.register("c5_granite", () -> new BlockItem(GRANITE_5.get(), PROPERTIES));
    public static final RegistryObject<Block> GRANITE_6 = BLOCKS.register("c6_granite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GRANITE_6_ITEM = ITEMS.register("c6_granite", () -> new BlockItem(GRANITE_6.get(), PROPERTIES));
    public static final RegistryObject<Block> GRANITE_7 = BLOCKS.register("c7_granite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GRANITE_7_ITEM = ITEMS.register("c7_granite", () -> new BlockItem(GRANITE_7.get(), PROPERTIES));
    public static final RegistryObject<Block> GRANITE_8 = BLOCKS.register("c8_granite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GRANITE_8_ITEM = ITEMS.register("c8_granite", () -> new BlockItem(GRANITE_8.get(), PROPERTIES));
    public static final RegistryObject<Block> GRANITE_9 = BLOCKS.register("c9_granite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GRANITE_9_ITEM = ITEMS.register("c9_granite", () -> new BlockItem(GRANITE_9.get(), PROPERTIES));
    public static final RegistryObject<Block> DIORITE_0 = BLOCKS.register("c0_diorite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DIRT).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> DIORITE_0_ITEM = ITEMS.register("c0_diorite", () -> new BlockItem(DIORITE_0.get(), PROPERTIES));
    public static final RegistryObject<Block> DIORITE_1 = BLOCKS.register("c1_diorite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.QUARTZ).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> DIORITE_1_ITEM = ITEMS.register("c1_diorite", () -> new BlockItem(DIORITE_1.get(), PROPERTIES));
    public static final RegistryObject<Block> DIORITE_2 = BLOCKS.register("c2_diorite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.QUARTZ).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> DIORITE_2_ITEM = ITEMS.register("c2_diorite", () -> new BlockItem(DIORITE_2.get(), PROPERTIES));
    public static final RegistryObject<Block> DIORITE_3 = BLOCKS.register("c3_diorite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.QUARTZ).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> DIORITE_3_ITEM = ITEMS.register("c3_diorite", () -> new BlockItem(DIORITE_3.get(), PROPERTIES));
    public static final RegistryObject<Block> DIORITE_4 = BLOCKS.register("c4_diorite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.QUARTZ).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> DIORITE_4_ITEM = ITEMS.register("c4_diorite", () -> new BlockItem(DIORITE_4.get(), PROPERTIES));
    public static final RegistryObject<Block> DIORITE_5 = BLOCKS.register("c5_diorite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.QUARTZ).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> DIORITE_5_ITEM = ITEMS.register("c5_diorite", () -> new BlockItem(DIORITE_5.get(), PROPERTIES));
    public static final RegistryObject<Block> DIORITE_6 = BLOCKS.register("c6_diorite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.QUARTZ).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> DIORITE_6_ITEM = ITEMS.register("c6_diorite", () -> new BlockItem(DIORITE_6.get(), PROPERTIES));
    public static final RegistryObject<Block> DIORITE_7 = BLOCKS.register("c7_diorite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.QUARTZ).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> DIORITE_7_ITEM = ITEMS.register("c7_diorite", () -> new BlockItem(DIORITE_7.get(), PROPERTIES));
    public static final RegistryObject<Block> DIORITE_8 = BLOCKS.register("c8_diorite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.QUARTZ).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> DIORITE_8_ITEM = ITEMS.register("c8_diorite", () -> new BlockItem(DIORITE_8.get(), PROPERTIES));
    public static final RegistryObject<Block> DIORITE_9 = BLOCKS.register("c9_diorite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.QUARTZ).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> DIORITE_9_ITEM = ITEMS.register("c9_diorite", () -> new BlockItem(DIORITE_9.get(), PROPERTIES));
    public static final RegistryObject<Block> ANDESITE_0 = BLOCKS.register("c0_andesite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> ANDESITE_0_ITEM = ITEMS.register("c0_andesite", () -> new BlockItem(ANDESITE_0.get(), PROPERTIES));
    public static final RegistryObject<Block> ANDESITE_1 = BLOCKS.register("c1_andesite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> ANDESITE_1_ITEM = ITEMS.register("c1_andesite", () -> new BlockItem(ANDESITE_1.get(), PROPERTIES));
    public static final RegistryObject<Block> ANDESITE_2 = BLOCKS.register("c2_andesite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> ANDESITE_2_ITEM = ITEMS.register("c2_andesite", () -> new BlockItem(ANDESITE_2.get(), PROPERTIES));
    public static final RegistryObject<Block> ANDESITE_3 = BLOCKS.register("c3_andesite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> ANDESITE_3_ITEM = ITEMS.register("c3_andesite", () -> new BlockItem(ANDESITE_3.get(), PROPERTIES));
    public static final RegistryObject<Block> ANDESITE_4 = BLOCKS.register("c4_andesite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> ANDESITE_4_ITEM = ITEMS.register("c4_andesite", () -> new BlockItem(ANDESITE_4.get(), PROPERTIES));
    public static final RegistryObject<Block> ANDESITE_5 = BLOCKS.register("c5_andesite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> ANDESITE_5_ITEM = ITEMS.register("c5_andesite", () -> new BlockItem(ANDESITE_5.get(), PROPERTIES));
    public static final RegistryObject<Block> ANDESITE_6 = BLOCKS.register("c6_andesite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> ANDESITE_6_ITEM = ITEMS.register("c6_andesite", () -> new BlockItem(ANDESITE_6.get(), PROPERTIES));
    public static final RegistryObject<Block> ANDESITE_7 = BLOCKS.register("c7_andesite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> ANDESITE_7_ITEM = ITEMS.register("c7_andesite", () -> new BlockItem(ANDESITE_7.get(), PROPERTIES));
    public static final RegistryObject<Block> ANDESITE_8 = BLOCKS.register("c8_andesite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> ANDESITE_8_ITEM = ITEMS.register("c8_andesite", () -> new BlockItem(ANDESITE_8.get(), PROPERTIES));
    public static final RegistryObject<Block> ANDESITE_9 = BLOCKS.register("c9_andesite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> ANDESITE_9_ITEM = ITEMS.register("c9_andesite", () -> new BlockItem(ANDESITE_9.get(), PROPERTIES));
    public static final RegistryObject<Block> DIRT_0 = BLOCKS.register("c0_dirt", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.DIRT).strength(3.0F, 10.0F)));
    public static final RegistryObject<Item> DIRT_0_ITEM = ITEMS.register("c0_dirt", () -> new BlockItem(DIRT_0.get(), PROPERTIES));
    public static final RegistryObject<Block> DIRT_1 = BLOCKS.register("c1_dirt", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.DIRT).strength(4.0F, 20.0F)));
    public static final RegistryObject<Item> DIRT_1_ITEM = ITEMS.register("c1_dirt", () -> new BlockItem(DIRT_1.get(), PROPERTIES));
    public static final RegistryObject<Block> DIRT_2 = BLOCKS.register("c2_dirt", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.DIRT).strength(5.0F, 60.0F)));
    public static final RegistryObject<Item> DIRT_2_ITEM = ITEMS.register("c2_dirt", () -> new BlockItem(DIRT_2.get(), PROPERTIES));
    public static final RegistryObject<Block> DIRT_3 = BLOCKS.register("c3_dirt", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.DIRT).strength(6.0F, 150.0F)));
    public static final RegistryObject<Item> DIRT_3_ITEM = ITEMS.register("c3_dirt", () -> new BlockItem(DIRT_3.get(), PROPERTIES));
    public static final RegistryObject<Block> DIRT_4 = BLOCKS.register("c4_dirt", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.DIRT).strength(7.0F, 300.0F)));
    public static final RegistryObject<Item> DIRT_4_ITEM = ITEMS.register("c4_dirt", () -> new BlockItem(DIRT_4.get(), PROPERTIES));
    public static final RegistryObject<Block> DIRT_5 = BLOCKS.register("c5_dirt", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.DIRT).strength(8.0F, 500.0F)));
    public static final RegistryObject<Item> DIRT_5_ITEM = ITEMS.register("c5_dirt", () -> new BlockItem(DIRT_5.get(), PROPERTIES));
    public static final RegistryObject<Block> DIRT_6 = BLOCKS.register("c6_dirt", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.DIRT).strength(9.0F, 850.0F)));
    public static final RegistryObject<Item> DIRT_6_ITEM = ITEMS.register("c6_dirt", () -> new BlockItem(DIRT_6.get(), PROPERTIES));
    public static final RegistryObject<Block> DIRT_7 = BLOCKS.register("c7_dirt", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.DIRT).strength(10.0F, 1200.0F)));
    public static final RegistryObject<Item> DIRT_7_ITEM = ITEMS.register("c7_dirt", () -> new BlockItem(DIRT_7.get(), PROPERTIES));
    public static final RegistryObject<Block> DIRT_8 = BLOCKS.register("c8_dirt", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.DIRT).strength(15.0F, 2000.0F)));
    public static final RegistryObject<Item> DIRT_8_ITEM = ITEMS.register("c8_dirt", () -> new BlockItem(DIRT_8.get(), PROPERTIES));
    public static final RegistryObject<Block> DIRT_9 = BLOCKS.register("c9_dirt", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.DIRT).strength(20.0F, 5000.0F)));
    public static final RegistryObject<Item> DIRT_9_ITEM = ITEMS.register("c9_dirt", () -> new BlockItem(DIRT_9.get(), PROPERTIES));
    public static final RegistryObject<Block> CRIMSON_NYLIUM_0 = BLOCKS.register("c0_crimson_nylium", () -> new NyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.CRIMSON_NYLIUM).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> CRIMSON_NYLIUM_0_ITEM = ITEMS.register("c0_crimson_nylium", () -> new BlockItem(CRIMSON_NYLIUM_0.get(), PROPERTIES));
    public static final RegistryObject<Block> CRIMSON_NYLIUM_1 = BLOCKS.register("c1_crimson_nylium", () -> new NyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.CRIMSON_NYLIUM).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> CRIMSON_NYLIUM_1_ITEM = ITEMS.register("c1_crimson_nylium", () -> new BlockItem(CRIMSON_NYLIUM_1.get(), PROPERTIES));
    public static final RegistryObject<Block> CRIMSON_NYLIUM_2 = BLOCKS.register("c2_crimson_nylium", () -> new NyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.CRIMSON_NYLIUM).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> CRIMSON_NYLIUM_2_ITEM = ITEMS.register("c2_crimson_nylium", () -> new BlockItem(CRIMSON_NYLIUM_2.get(), PROPERTIES));
    public static final RegistryObject<Block> CRIMSON_NYLIUM_3 = BLOCKS.register("c3_crimson_nylium", () -> new NyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.CRIMSON_NYLIUM).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> CRIMSON_NYLIUM_3_ITEM = ITEMS.register("c3_crimson_nylium", () -> new BlockItem(CRIMSON_NYLIUM_3.get(), PROPERTIES));
    public static final RegistryObject<Block> CRIMSON_NYLIUM_4 = BLOCKS.register("c4_crimson_nylium", () -> new NyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.CRIMSON_NYLIUM).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> CRIMSON_NYLIUM_4_ITEM = ITEMS.register("c4_crimson_nylium", () -> new BlockItem(CRIMSON_NYLIUM_4.get(), PROPERTIES));
    public static final RegistryObject<Block> CRIMSON_NYLIUM_5 = BLOCKS.register("c5_crimson_nylium", () -> new NyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.CRIMSON_NYLIUM).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> CRIMSON_NYLIUM_5_ITEM = ITEMS.register("c5_crimson_nylium", () -> new BlockItem(CRIMSON_NYLIUM_5.get(), PROPERTIES));
    public static final RegistryObject<Block> CRIMSON_NYLIUM_6 = BLOCKS.register("c6_crimson_nylium", () -> new NyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.CRIMSON_NYLIUM).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> CRIMSON_NYLIUM_6_ITEM = ITEMS.register("c6_crimson_nylium", () -> new BlockItem(CRIMSON_NYLIUM_6.get(), PROPERTIES));
    public static final RegistryObject<Block> CRIMSON_NYLIUM_7 = BLOCKS.register("c7_crimson_nylium", () -> new NyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.CRIMSON_NYLIUM).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> CRIMSON_NYLIUM_7_ITEM = ITEMS.register("c7_crimson_nylium", () -> new BlockItem(CRIMSON_NYLIUM_7.get(), PROPERTIES));
    public static final RegistryObject<Block> CRIMSON_NYLIUM_8 = BLOCKS.register("c8_crimson_nylium", () -> new NyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.CRIMSON_NYLIUM).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> CRIMSON_NYLIUM_8_ITEM = ITEMS.register("c8_crimson_nylium", () -> new BlockItem(CRIMSON_NYLIUM_8.get(), PROPERTIES));
    public static final RegistryObject<Block> CRIMSON_NYLIUM_9 = BLOCKS.register("c9_crimson_nylium", () -> new NyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.CRIMSON_NYLIUM).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> CRIMSON_NYLIUM_9_ITEM = ITEMS.register("c9_crimson_nylium", () -> new BlockItem(CRIMSON_NYLIUM_9.get(), PROPERTIES));
    public static final RegistryObject<Block> WARPED_NYLIUM_0 = BLOCKS.register("c0_warped_nylium", () -> new NyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.WARPED_NYLIUM).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> WARPED_NYLIUM_0_ITEM = ITEMS.register("c0_warped_nylium", () -> new BlockItem(WARPED_NYLIUM_0.get(), PROPERTIES));
    public static final RegistryObject<Block> WARPED_NYLIUM_1 = BLOCKS.register("c1_warped_nylium", () -> new NyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.WARPED_NYLIUM).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> WARPED_NYLIUM_1_ITEM = ITEMS.register("c1_warped_nylium", () -> new BlockItem(WARPED_NYLIUM_1.get(), PROPERTIES));
    public static final RegistryObject<Block> WARPED_NYLIUM_2 = BLOCKS.register("c2_warped_nylium", () -> new NyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.WARPED_NYLIUM).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> WARPED_NYLIUM_2_ITEM = ITEMS.register("c2_warped_nylium", () -> new BlockItem(WARPED_NYLIUM_2.get(), PROPERTIES));
    public static final RegistryObject<Block> WARPED_NYLIUM_3 = BLOCKS.register("c3_warped_nylium", () -> new NyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.WARPED_NYLIUM).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> WARPED_NYLIUM_3_ITEM = ITEMS.register("c3_warped_nylium", () -> new BlockItem(WARPED_NYLIUM_3.get(), PROPERTIES));
    public static final RegistryObject<Block> WARPED_NYLIUM_4 = BLOCKS.register("c4_warped_nylium", () -> new NyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.WARPED_NYLIUM).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> WARPED_NYLIUM_4_ITEM = ITEMS.register("c4_warped_nylium", () -> new BlockItem(WARPED_NYLIUM_4.get(), PROPERTIES));
    public static final RegistryObject<Block> WARPED_NYLIUM_5 = BLOCKS.register("c5_warped_nylium", () -> new NyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.WARPED_NYLIUM).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> WARPED_NYLIUM_5_ITEM = ITEMS.register("c5_warped_nylium", () -> new BlockItem(WARPED_NYLIUM_5.get(), PROPERTIES));
    public static final RegistryObject<Block> WARPED_NYLIUM_6 = BLOCKS.register("c6_warped_nylium", () -> new NyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.WARPED_NYLIUM).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> WARPED_NYLIUM_6_ITEM = ITEMS.register("c6_warped_nylium", () -> new BlockItem(WARPED_NYLIUM_6.get(), PROPERTIES));
    public static final RegistryObject<Block> WARPED_NYLIUM_7 = BLOCKS.register("c7_warped_nylium", () -> new NyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.WARPED_NYLIUM).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> WARPED_NYLIUM_7_ITEM = ITEMS.register("c7_warped_nylium", () -> new BlockItem(WARPED_NYLIUM_7.get(), PROPERTIES));
    public static final RegistryObject<Block> WARPED_NYLIUM_8 = BLOCKS.register("c8_warped_nylium", () -> new NyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.WARPED_NYLIUM).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> WARPED_NYLIUM_8_ITEM = ITEMS.register("c8_warped_nylium", () -> new BlockItem(WARPED_NYLIUM_8.get(), PROPERTIES));
    public static final RegistryObject<Block> WARPED_NYLIUM_9 = BLOCKS.register("c9_warped_nylium", () -> new NyliumBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.WARPED_NYLIUM).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> WARPED_NYLIUM_9_ITEM = ITEMS.register("c9_warped_nylium", () -> new BlockItem(WARPED_NYLIUM_9.get(), PROPERTIES));
    public static final RegistryObject<Block> COBBLESTONE_0 = BLOCKS.register("c0_cobblestone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COBBLESTONE_0_ITEM = ITEMS.register("c0_cobblestone", () -> new BlockItem(COBBLESTONE_0.get(), PROPERTIES));
    public static final RegistryObject<Block> COBBLESTONE_1 = BLOCKS.register("c1_cobblestone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COBBLESTONE_1_ITEM = ITEMS.register("c1_cobblestone", () -> new BlockItem(COBBLESTONE_1.get(), PROPERTIES));
    public static final RegistryObject<Block> COBBLESTONE_2 = BLOCKS.register("c2_cobblestone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COBBLESTONE_2_ITEM = ITEMS.register("c2_cobblestone", () -> new BlockItem(COBBLESTONE_2.get(), PROPERTIES));
    public static final RegistryObject<Block> COBBLESTONE_3 = BLOCKS.register("c3_cobblestone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COBBLESTONE_3_ITEM = ITEMS.register("c3_cobblestone", () -> new BlockItem(COBBLESTONE_3.get(), PROPERTIES));
    public static final RegistryObject<Block> COBBLESTONE_4 = BLOCKS.register("c4_cobblestone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COBBLESTONE_4_ITEM = ITEMS.register("c4_cobblestone", () -> new BlockItem(COBBLESTONE_4.get(), PROPERTIES));
    public static final RegistryObject<Block> COBBLESTONE_5 = BLOCKS.register("c5_cobblestone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COBBLESTONE_5_ITEM = ITEMS.register("c5_cobblestone", () -> new BlockItem(COBBLESTONE_5.get(), PROPERTIES));
    public static final RegistryObject<Block> COBBLESTONE_6 = BLOCKS.register("c6_cobblestone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COBBLESTONE_6_ITEM = ITEMS.register("c6_cobblestone", () -> new BlockItem(COBBLESTONE_6.get(), PROPERTIES));
    public static final RegistryObject<Block> COBBLESTONE_7 = BLOCKS.register("c7_cobblestone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COBBLESTONE_7_ITEM = ITEMS.register("c7_cobblestone", () -> new BlockItem(COBBLESTONE_7.get(), PROPERTIES));
    public static final RegistryObject<Block> COBBLESTONE_8 = BLOCKS.register("c8_cobblestone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COBBLESTONE_8_ITEM = ITEMS.register("c8_cobblestone", () -> new BlockItem(COBBLESTONE_8.get(), PROPERTIES));
    public static final RegistryObject<Block> COBBLESTONE_9 = BLOCKS.register("c9_cobblestone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COBBLESTONE_9_ITEM = ITEMS.register("c9_cobblestone", () -> new BlockItem(COBBLESTONE_9.get(), PROPERTIES));
    public static final RegistryObject<Block> CLAY_0 = BLOCKS.register("c0_clay", () -> new Block(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.CLAY).strength(3.0F, 10.0F)));
    public static final RegistryObject<Item> CLAY_0_ITEM = ITEMS.register("c0_clay", () -> new BlockItem(CLAY_0.get(), PROPERTIES));
    public static final RegistryObject<Block> CLAY_1 = BLOCKS.register("c1_clay", () -> new Block(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.CLAY).strength(4.0F, 20.0F)));
    public static final RegistryObject<Item> CLAY_1_ITEM = ITEMS.register("c1_clay", () -> new BlockItem(CLAY_1.get(), PROPERTIES));
    public static final RegistryObject<Block> CLAY_2 = BLOCKS.register("c2_clay", () -> new Block(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.CLAY).strength(5.0F, 60.0F)));
    public static final RegistryObject<Item> CLAY_2_ITEM = ITEMS.register("c2_clay", () -> new BlockItem(CLAY_2.get(), PROPERTIES));
    public static final RegistryObject<Block> CLAY_3 = BLOCKS.register("c3_clay", () -> new Block(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.CLAY).strength(6.0F, 150.0F)));
    public static final RegistryObject<Item> CLAY_3_ITEM = ITEMS.register("c3_clay", () -> new BlockItem(CLAY_3.get(), PROPERTIES));
    public static final RegistryObject<Block> CLAY_4 = BLOCKS.register("c4_clay", () -> new Block(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.CLAY).strength(7.0F, 300.0F)));
    public static final RegistryObject<Item> CLAY_4_ITEM = ITEMS.register("c4_clay", () -> new BlockItem(CLAY_4.get(), PROPERTIES));
    public static final RegistryObject<Block> CLAY_5 = BLOCKS.register("c5_clay", () -> new Block(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.CLAY).strength(8.0F, 500.0F)));
    public static final RegistryObject<Item> CLAY_5_ITEM = ITEMS.register("c5_clay", () -> new BlockItem(CLAY_5.get(), PROPERTIES));
    public static final RegistryObject<Block> CLAY_6 = BLOCKS.register("c6_clay", () -> new Block(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.CLAY).strength(9.0F, 850.0F)));
    public static final RegistryObject<Item> CLAY_6_ITEM = ITEMS.register("c6_clay", () -> new BlockItem(CLAY_6.get(), PROPERTIES));
    public static final RegistryObject<Block> CLAY_7 = BLOCKS.register("c7_clay", () -> new Block(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.CLAY).strength(10.0F, 1200.0F)));
    public static final RegistryObject<Item> CLAY_7_ITEM = ITEMS.register("c7_clay", () -> new BlockItem(CLAY_7.get(), PROPERTIES));
    public static final RegistryObject<Block> CLAY_8 = BLOCKS.register("c8_clay", () -> new Block(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.CLAY).strength(15.0F, 2000.0F)));
    public static final RegistryObject<Item> CLAY_8_ITEM = ITEMS.register("c8_clay", () -> new BlockItem(CLAY_8.get(), PROPERTIES));
    public static final RegistryObject<Block> CLAY_9 = BLOCKS.register("c9_clay", () -> new Block(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.CLAY).strength(20.0F, 5000.0F)));
    public static final RegistryObject<Item> CLAY_9_ITEM = ITEMS.register("c9_clay", () -> new BlockItem(CLAY_9.get(), PROPERTIES));
    public static final RegistryObject<Block> SAND_0 = BLOCKS.register("c0_sand", () -> new SandBlock(14406560, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.SAND).strength(5.0F, 10.0F)));
    public static final RegistryObject<Item> SAND_0_ITEM = ITEMS.register("c0_sand", () -> new BlockItem(SAND_0.get(), PROPERTIES));
    public static final RegistryObject<Block> SAND_2 = BLOCKS.register("c2_sand", () -> new SandBlock(14406560, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.SAND).strength(3.0F, 60.0F)));
    public static final RegistryObject<Item> SAND_2_ITEM = ITEMS.register("c2_sand", () -> new BlockItem(SAND_2.get(), PROPERTIES));
    public static final RegistryObject<Block> SAND_1 = BLOCKS.register("c1_sand", () -> new SandBlock(14406560, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.SAND).strength(4.0F, 20.0F)));
    public static final RegistryObject<Item> SAND_1_ITEM = ITEMS.register("c1_sand", () -> new BlockItem(SAND_1.get(), PROPERTIES));
    public static final RegistryObject<Block> SAND_3 = BLOCKS.register("c3_sand", () -> new SandBlock(14406560, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.SAND).strength(6.0F, 150.0F)));
    public static final RegistryObject<Item> SAND_3_ITEM = ITEMS.register("c3_sand", () -> new BlockItem(SAND_3.get(), PROPERTIES));
    public static final RegistryObject<Block> SAND_4 = BLOCKS.register("c4_sand", () -> new SandBlock(14406560, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.SAND).strength(7.0F, 300.0F)));
    public static final RegistryObject<Item> SAND_4_ITEM = ITEMS.register("c4_sand", () -> new BlockItem(SAND_4.get(), PROPERTIES));
    public static final RegistryObject<Block> SAND_5 = BLOCKS.register("c5_sand", () -> new SandBlock(14406560, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.SAND).strength(8.0F, 500.0F)));
    public static final RegistryObject<Item> SAND_5_ITEM = ITEMS.register("c5_sand", () -> new BlockItem(SAND_5.get(), PROPERTIES));
    public static final RegistryObject<Block> SAND_6 = BLOCKS.register("c6_sand", () -> new SandBlock(14406560, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.SAND).strength(9.0F, 850.0F)));
    public static final RegistryObject<Item> SAND_6_ITEM = ITEMS.register("c6_sand", () -> new BlockItem(SAND_6.get(), PROPERTIES));
    public static final RegistryObject<Block> SAND_7 = BLOCKS.register("c7_sand", () -> new SandBlock(14406560, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.SAND).strength(10.0F, 1200.0F)));
    public static final RegistryObject<Item> SAND_7_ITEM = ITEMS.register("c7_sand", () -> new BlockItem(SAND_7.get(), PROPERTIES));
    public static final RegistryObject<Block> SAND_8 = BLOCKS.register("c8_sand", () -> new SandBlock(14406560, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.SAND).strength(15.0F, 2000.0F)));
    public static final RegistryObject<Item> SAND_8_ITEM = ITEMS.register("c8_sand", () -> new BlockItem(SAND_8.get(), PROPERTIES));
    public static final RegistryObject<Block> SAND_9 = BLOCKS.register("c9_sand", () -> new SandBlock(14406560, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.SAND).strength(20.0F, 5000.0F)));
    public static final RegistryObject<Item> SAND_9_ITEM = ITEMS.register("c9_sand", () -> new BlockItem(SAND_9.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_SAND_0 = BLOCKS.register("c0_red_sand", () -> new SandBlock(11098145, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_ORANGE).strength(3.0F, 10.0F)));
    public static final RegistryObject<Item> RED_SAND_0_ITEM = ITEMS.register("c0_red_sand", () -> new BlockItem(RED_SAND_0.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_SAND_1 = BLOCKS.register("c1_red_sand", () -> new SandBlock(11098145, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_ORANGE).strength(4.0F, 20.0F)));
    public static final RegistryObject<Item> RED_SAND_1_ITEM = ITEMS.register("c1_red_sand", () -> new BlockItem(RED_SAND_1.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_SAND_2 = BLOCKS.register("c2_red_sand", () -> new SandBlock(11098145, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_ORANGE).strength(5.0F, 60.0F)));
    public static final RegistryObject<Item> RED_SAND_2_ITEM = ITEMS.register("c2_red_sand", () -> new BlockItem(RED_SAND_2.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_SAND_3 = BLOCKS.register("c3_red_sand", () -> new SandBlock(11098145, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_ORANGE).strength(6.0F, 150.0F)));
    public static final RegistryObject<Item> RED_SAND_3_ITEM = ITEMS.register("c3_red_sand", () -> new BlockItem(RED_SAND_3.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_SAND_4 = BLOCKS.register("c4_red_sand", () -> new SandBlock(11098145, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_ORANGE).strength(7.0F, 300.0F)));
    public static final RegistryObject<Item> RED_SAND_4_ITEM = ITEMS.register("c4_red_sand", () -> new BlockItem(RED_SAND_4.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_SAND_5 = BLOCKS.register("c5_red_sand", () -> new SandBlock(11098145, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_ORANGE).strength(8.0F, 500.0F)));
    public static final RegistryObject<Item> RED_SAND_5_ITEM = ITEMS.register("c5_red_sand", () -> new BlockItem(RED_SAND_5.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_SAND_6 = BLOCKS.register("c6_red_sand", () -> new SandBlock(11098145, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_ORANGE).strength(9.0F, 850.0F)));
    public static final RegistryObject<Item> RED_SAND_6_ITEM = ITEMS.register("c6_red_sand", () -> new BlockItem(RED_SAND_6.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_SAND_7 = BLOCKS.register("c7_red_sand", () -> new SandBlock(11098145, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_ORANGE).strength(10.0F, 1200.0F)));
    public static final RegistryObject<Item> RED_SAND_7_ITEM = ITEMS.register("c7_red_sand", () -> new BlockItem(RED_SAND_7.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_SAND_8 = BLOCKS.register("c8_red_sand", () -> new SandBlock(11098145, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_ORANGE).strength(15.0F, 2000.0F)));
    public static final RegistryObject<Item> RED_SAND_8_ITEM = ITEMS.register("c8_red_sand", () -> new BlockItem(RED_SAND_8.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_SAND_9 = BLOCKS.register("c9_red_sand", () -> new SandBlock(11098145, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_ORANGE).strength(20.0F, 5000.0F)));
    public static final RegistryObject<Item> RED_SAND_9_ITEM = ITEMS.register("c9_red_sand", () -> new BlockItem(RED_SAND_9.get(), PROPERTIES));
    public static final RegistryObject<Block> GRAVEL_0 = BLOCKS.register("c0_gravel", () -> new GravelBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.STONE).strength(3.0F, 10.0F)));
    public static final RegistryObject<Item> GRAVEL_0_ITEM = ITEMS.register("c0_gravel", () -> new BlockItem(GRAVEL_0.get(), PROPERTIES));
    public static final RegistryObject<Block> GRAVEL_1 = BLOCKS.register("c1_gravel", () -> new GravelBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.STONE).strength(4.0F, 20.0F)));
    public static final RegistryObject<Item> GRAVEL_1_ITEM = ITEMS.register("c1_gravel", () -> new BlockItem(GRAVEL_1.get(), PROPERTIES));
    public static final RegistryObject<Block> GRAVEL_2 = BLOCKS.register("c2_gravel", () -> new GravelBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.STONE).strength(5.0F, 60.0F)));
    public static final RegistryObject<Item> GRAVEL_2_ITEM = ITEMS.register("c2_gravel", () -> new BlockItem(GRAVEL_2.get(), PROPERTIES));
    public static final RegistryObject<Block> GRAVEL_3 = BLOCKS.register("c3_gravel", () -> new GravelBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.STONE).strength(6.0F, 150.0F)));
    public static final RegistryObject<Item> GRAVEL_3_ITEM = ITEMS.register("c3_gravel", () -> new BlockItem(GRAVEL_3.get(), PROPERTIES));
    public static final RegistryObject<Block> GRAVEL_4 = BLOCKS.register("c4_gravel", () -> new GravelBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.STONE).strength(7.0F, 300.0F)));
    public static final RegistryObject<Item> GRAVEL_4_ITEM = ITEMS.register("c4_gravel", () -> new BlockItem(GRAVEL_4.get(), PROPERTIES));
    public static final RegistryObject<Block> GRAVEL_5 = BLOCKS.register("c5_gravel", () -> new GravelBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.STONE).strength(8.0F, 500.0F)));
    public static final RegistryObject<Item> GRAVEL_5_ITEM = ITEMS.register("c5_gravel", () -> new BlockItem(GRAVEL_5.get(), PROPERTIES));
    public static final RegistryObject<Block> GRAVEL_6 = BLOCKS.register("c6_gravel", () -> new GravelBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.STONE).strength(9.0F, 850.0F)));
    public static final RegistryObject<Item> GRAVEL_6_ITEM = ITEMS.register("c6_gravel", () -> new BlockItem(GRAVEL_6.get(), PROPERTIES));
    public static final RegistryObject<Block> GRAVEL_7 = BLOCKS.register("c7_gravel", () -> new GravelBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.STONE).strength(10.5F, 1200.0F)));
    public static final RegistryObject<Item> GRAVEL_7_ITEM = ITEMS.register("c7_gravel", () -> new BlockItem(GRAVEL_7.get(), PROPERTIES));
    public static final RegistryObject<Block> GRAVEL_8 = BLOCKS.register("c8_gravel", () -> new GravelBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.STONE).strength(15.0F, 2000.0F)));
    public static final RegistryObject<Item> GRAVEL_8_ITEM = ITEMS.register("c8_gravel", () -> new BlockItem(GRAVEL_8.get(), PROPERTIES));
    public static final RegistryObject<Block> GRAVEL_9 = BLOCKS.register("c9_gravel", () -> new GravelBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.STONE).strength(20.0F, 5000.0F)));
    public static final RegistryObject<Item> GRAVEL_9_ITEM = ITEMS.register("c9_gravel", () -> new BlockItem(GRAVEL_9.get(), PROPERTIES));
    public static final RegistryObject<Block> SANDSTONE_0 = BLOCKS.register("c0_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SANDSTONE_0_ITEM = ITEMS.register("c0_sandstone", () -> new BlockItem(SANDSTONE_0.get(), PROPERTIES));
    public static final RegistryObject<Block> SANDSTONE_1 = BLOCKS.register("c1_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SANDSTONE_1_ITEM = ITEMS.register("c1_sandstone", () -> new BlockItem(SANDSTONE_1.get(), PROPERTIES));
    public static final RegistryObject<Block> SANDSTONE_2 = BLOCKS.register("c2_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SANDSTONE_2_ITEM = ITEMS.register("c2_sandstone", () -> new BlockItem(SANDSTONE_2.get(), PROPERTIES));
    public static final RegistryObject<Block> SANDSTONE_3 = BLOCKS.register("c3_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SANDSTONE_3_ITEM = ITEMS.register("c3_sandstone", () -> new BlockItem(SANDSTONE_3.get(), PROPERTIES));
    public static final RegistryObject<Block> SANDSTONE_4 = BLOCKS.register("c4_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SANDSTONE_4_ITEM = ITEMS.register("c4_sandstone", () -> new BlockItem(SANDSTONE_4.get(), PROPERTIES));
    public static final RegistryObject<Block> SANDSTONE_5 = BLOCKS.register("c5_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SANDSTONE_5_ITEM = ITEMS.register("c5_sandstone", () -> new BlockItem(SANDSTONE_5.get(), PROPERTIES));
    public static final RegistryObject<Block> SANDSTONE_6 = BLOCKS.register("c6_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SANDSTONE_6_ITEM = ITEMS.register("c6_sandstone", () -> new BlockItem(SANDSTONE_6.get(), PROPERTIES));
    public static final RegistryObject<Block> SANDSTONE_7 = BLOCKS.register("c7_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SANDSTONE_7_ITEM = ITEMS.register("c7_sandstone", () -> new BlockItem(SANDSTONE_7.get(), PROPERTIES));
    public static final RegistryObject<Block> SANDSTONE_8 = BLOCKS.register("c8_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SANDSTONE_8_ITEM = ITEMS.register("c8_sandstone", () -> new BlockItem(SANDSTONE_8.get(), PROPERTIES));
    public static final RegistryObject<Block> SANDSTONE_9 = BLOCKS.register("c9_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SANDSTONE_9_ITEM = ITEMS.register("c9_sandstone", () -> new BlockItem(SANDSTONE_9.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_SANDSTONE_0 = BLOCKS.register("c0_red_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> RED_SANDSTONE_0_ITEM = ITEMS.register("c0_red_sandstone", () -> new BlockItem(RED_SANDSTONE_0.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_SANDSTONE_1 = BLOCKS.register("c1_red_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> RED_SANDSTONE_1_ITEM = ITEMS.register("c1_red_sandstone", () -> new BlockItem(RED_SANDSTONE_1.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_SANDSTONE_2 = BLOCKS.register("c2_red_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> RED_SANDSTONE_2_ITEM = ITEMS.register("c2_red_sandstone", () -> new BlockItem(RED_SANDSTONE_2.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_SANDSTONE_3 = BLOCKS.register("c3_red_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> RED_SANDSTONE_3_ITEM = ITEMS.register("c3_red_sandstone", () -> new BlockItem(RED_SANDSTONE_3.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_SANDSTONE_4 = BLOCKS.register("c4_red_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> RED_SANDSTONE_4_ITEM = ITEMS.register("c4_red_sandstone", () -> new BlockItem(RED_SANDSTONE_4.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_SANDSTONE_5 = BLOCKS.register("c5_red_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> RED_SANDSTONE_5_ITEM = ITEMS.register("c5_red_sandstone", () -> new BlockItem(RED_SANDSTONE_5.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_SANDSTONE_6 = BLOCKS.register("c6_red_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> RED_SANDSTONE_6_ITEM = ITEMS.register("c6_red_sandstone", () -> new BlockItem(RED_SANDSTONE_6.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_SANDSTONE_7 = BLOCKS.register("c7_red_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> RED_SANDSTONE_7_ITEM = ITEMS.register("c7_red_sandstone", () -> new BlockItem(RED_SANDSTONE_7.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_SANDSTONE_8 = BLOCKS.register("c8_red_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> RED_SANDSTONE_8_ITEM = ITEMS.register("c8_red_sandstone", () -> new BlockItem(RED_SANDSTONE_8.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_SANDSTONE_9 = BLOCKS.register("c9_red_sandstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> RED_SANDSTONE_9_ITEM = ITEMS.register("c9_red_sandstone", () -> new BlockItem(RED_SANDSTONE_9.get(), PROPERTIES));
    public static final RegistryObject<Block> COAL_ORE_0 = BLOCKS.register("c0_coal_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COAL_ORE_0_ITEM = ITEMS.register("c0_coal_ore", () -> new BlockItem(COAL_ORE_0.get(), PROPERTIES));
    public static final RegistryObject<Block> COAL_ORE_1 = BLOCKS.register("c1_coal_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COAL_ORE_1_ITEM = ITEMS.register("c1_coal_ore", () -> new BlockItem(COAL_ORE_1.get(), PROPERTIES));
    public static final RegistryObject<Block> COAL_ORE_2 = BLOCKS.register("c2_coal_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COAL_ORE_2_ITEM = ITEMS.register("c2_coal_ore", () -> new BlockItem(COAL_ORE_2.get(), PROPERTIES));
    public static final RegistryObject<Block> COAL_ORE_3 = BLOCKS.register("c3_coal_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COAL_ORE_3_ITEM = ITEMS.register("c3_coal_ore", () -> new BlockItem(COAL_ORE_3.get(), PROPERTIES));
    public static final RegistryObject<Block> COAL_ORE_4 = BLOCKS.register("c4_coal_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COAL_ORE_4_ITEM = ITEMS.register("c4_coal_ore", () -> new BlockItem(COAL_ORE_4.get(), PROPERTIES));
    public static final RegistryObject<Block> COAL_ORE_5 = BLOCKS.register("c5_coal_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COAL_ORE_5_ITEM = ITEMS.register("c5_coal_ore", () -> new BlockItem(COAL_ORE_5.get(), PROPERTIES));
    public static final RegistryObject<Block> COAL_ORE_6 = BLOCKS.register("c6_coal_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COAL_ORE_6_ITEM = ITEMS.register("c6_coal_ore", () -> new BlockItem(COAL_ORE_6.get(), PROPERTIES));
    public static final RegistryObject<Block> COAL_ORE_7 = BLOCKS.register("c7_coal_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COAL_ORE_7_ITEM = ITEMS.register("c7_coal_ore", () -> new BlockItem(COAL_ORE_7.get(), PROPERTIES));
    public static final RegistryObject<Block> COAL_ORE_8 = BLOCKS.register("c8_coal_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COAL_ORE_8_ITEM = ITEMS.register("c8_coal_ore", () -> new BlockItem(COAL_ORE_8.get(), PROPERTIES));
    public static final RegistryObject<Block> COAL_ORE_9 = BLOCKS.register("c9_coal_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COAL_ORE_9_ITEM = ITEMS.register("c9_coal_ore", () -> new BlockItem(COAL_ORE_9.get(), PROPERTIES));
    public static final RegistryObject<Block> IRON_ORE_0 = BLOCKS.register("c0_iron_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> IRON_ORE_0_ITEM = ITEMS.register("c0_iron_ore", () -> new BlockItem(IRON_ORE_0.get(), PROPERTIES));
    public static final RegistryObject<Block> IRON_ORE_1 = BLOCKS.register("c1_iron_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> IRON_ORE_1_ITEM = ITEMS.register("c1_iron_ore", () -> new BlockItem(IRON_ORE_1.get(), PROPERTIES));
    public static final RegistryObject<Block> IRON_ORE_2 = BLOCKS.register("c2_iron_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> IRON_ORE_2_ITEM = ITEMS.register("c2_iron_ore", () -> new BlockItem(IRON_ORE_2.get(), PROPERTIES));
    public static final RegistryObject<Block> IRON_ORE_3 = BLOCKS.register("c3_iron_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> IRON_ORE_3_ITEM = ITEMS.register("c3_iron_ore", () -> new BlockItem(IRON_ORE_3.get(), PROPERTIES));
    public static final RegistryObject<Block> IRON_ORE_4 = BLOCKS.register("c4_iron_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> IRON_ORE_4_ITEM = ITEMS.register("c4_iron_ore", () -> new BlockItem(IRON_ORE_4.get(), PROPERTIES));
    public static final RegistryObject<Block> IRON_ORE_5 = BLOCKS.register("c5_iron_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> IRON_ORE_5_ITEM = ITEMS.register("c5_iron_ore", () -> new BlockItem(IRON_ORE_5.get(), PROPERTIES));
    public static final RegistryObject<Block> IRON_ORE_6 = BLOCKS.register("c6_iron_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> IRON_ORE_6_ITEM = ITEMS.register("c6_iron_ore", () -> new BlockItem(IRON_ORE_6.get(), PROPERTIES));
    public static final RegistryObject<Block> IRON_ORE_7 = BLOCKS.register("c7_iron_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> IRON_ORE_7_ITEM = ITEMS.register("c7_iron_ore", () -> new BlockItem(IRON_ORE_7.get(), PROPERTIES));
    public static final RegistryObject<Block> IRON_ORE_8 = BLOCKS.register("c8_iron_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> IRON_ORE_8_ITEM = ITEMS.register("c8_iron_ore", () -> new BlockItem(IRON_ORE_8.get(), PROPERTIES));
    public static final RegistryObject<Block> IRON_ORE_9 = BLOCKS.register("c9_iron_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> IRON_ORE_9_ITEM = ITEMS.register("c9_iron_ore", () -> new BlockItem(IRON_ORE_9.get(), PROPERTIES));
    public static final RegistryObject<Block> GOLD_ORE_0 = BLOCKS.register("c0_gold_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GOLD_ORE_0_ITEM = ITEMS.register("c0_gold_ore", () -> new BlockItem(GOLD_ORE_0.get(), PROPERTIES));
    public static final RegistryObject<Block> GOLD_ORE_1 = BLOCKS.register("c1_gold_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GOLD_ORE_1_ITEM = ITEMS.register("c1_gold_ore", () -> new BlockItem(GOLD_ORE_1.get(), PROPERTIES));
    public static final RegistryObject<Block> GOLD_ORE_2 = BLOCKS.register("c2_gold_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GOLD_ORE_2_ITEM = ITEMS.register("c2_gold_ore", () -> new BlockItem(GOLD_ORE_2.get(), PROPERTIES));
    public static final RegistryObject<Block> GOLD_ORE_3 = BLOCKS.register("c3_gold_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GOLD_ORE_3_ITEM = ITEMS.register("c3_gold_ore", () -> new BlockItem(GOLD_ORE_3.get(), PROPERTIES));
    public static final RegistryObject<Block> GOLD_ORE_4 = BLOCKS.register("c4_gold_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GOLD_ORE_4_ITEM = ITEMS.register("c4_gold_ore", () -> new BlockItem(GOLD_ORE_4.get(), PROPERTIES));
    public static final RegistryObject<Block> GOLD_ORE_5 = BLOCKS.register("c5_gold_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GOLD_ORE_5_ITEM = ITEMS.register("c5_gold_ore", () -> new BlockItem(GOLD_ORE_5.get(), PROPERTIES));
    public static final RegistryObject<Block> GOLD_ORE_6 = BLOCKS.register("c6_gold_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GOLD_ORE_6_ITEM = ITEMS.register("c6_gold_ore", () -> new BlockItem(GOLD_ORE_6.get(), PROPERTIES));
    public static final RegistryObject<Block> GOLD_ORE_7 = BLOCKS.register("c7_gold_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GOLD_ORE_7_ITEM = ITEMS.register("c7_gold_ore", () -> new BlockItem(GOLD_ORE_7.get(), PROPERTIES));
    public static final RegistryObject<Block> GOLD_ORE_8 = BLOCKS.register("c8_gold_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GOLD_ORE_8_ITEM = ITEMS.register("c8_gold_ore", () -> new BlockItem(GOLD_ORE_8.get(), PROPERTIES));
    public static final RegistryObject<Block> GOLD_ORE_9 = BLOCKS.register("c9_gold_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GOLD_ORE_9_ITEM = ITEMS.register("c9_gold_ore", () -> new BlockItem(GOLD_ORE_9.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_GOLD_ORE_0 = BLOCKS.register("c0_nether_gold_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_GOLD_ORE_0_ITEM = ITEMS.register("c0_nether_gold_ore", () -> new BlockItem(NETHER_GOLD_ORE_0.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_GOLD_ORE_1 = BLOCKS.register("c1_nether_gold_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_GOLD_ORE_1_ITEM = ITEMS.register("c1_nether_gold_ore", () -> new BlockItem(NETHER_GOLD_ORE_1.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_GOLD_ORE_2 = BLOCKS.register("c2_nether_gold_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_GOLD_ORE_2_ITEM = ITEMS.register("c2_nether_gold_ore", () -> new BlockItem(NETHER_GOLD_ORE_2.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_GOLD_ORE_3 = BLOCKS.register("c3_nether_gold_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_GOLD_ORE_3_ITEM = ITEMS.register("c3_nether_gold_ore", () -> new BlockItem(NETHER_GOLD_ORE_3.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_GOLD_ORE_4 = BLOCKS.register("c4_nether_gold_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_GOLD_ORE_4_ITEM = ITEMS.register("c4_nether_gold_ore", () -> new BlockItem(NETHER_GOLD_ORE_4.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_GOLD_ORE_5 = BLOCKS.register("c5_nether_gold_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_GOLD_ORE_5_ITEM = ITEMS.register("c5_nether_gold_ore", () -> new BlockItem(NETHER_GOLD_ORE_5.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_GOLD_ORE_6 = BLOCKS.register("c6_nether_gold_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_GOLD_ORE_6_ITEM = ITEMS.register("c6_nether_gold_ore", () -> new BlockItem(NETHER_GOLD_ORE_6.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_GOLD_ORE_7 = BLOCKS.register("c7_nether_gold_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_GOLD_ORE_7_ITEM = ITEMS.register("c7_nether_gold_ore", () -> new BlockItem(NETHER_GOLD_ORE_7.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_GOLD_ORE_8 = BLOCKS.register("c8_nether_gold_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_GOLD_ORE_8_ITEM = ITEMS.register("c8_nether_gold_ore", () -> new BlockItem(NETHER_GOLD_ORE_8.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_GOLD_ORE_9 = BLOCKS.register("c9_nether_gold_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_GOLD_ORE_9_ITEM = ITEMS.register("c9_nether_gold_ore", () -> new BlockItem(NETHER_GOLD_ORE_9.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_QUARTZ_ORE_0 = BLOCKS.register("c0_nether_quartz_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_QUARTZ_ORE_0_ITEM = ITEMS.register("c0_nether_quartz_ore", () -> new BlockItem(NETHER_QUARTZ_ORE_0.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_QUARTZ_ORE_1 = BLOCKS.register("c1_nether_quartz_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_QUARTZ_ORE_1_ITEM = ITEMS.register("c1_nether_quartz_ore", () -> new BlockItem(NETHER_QUARTZ_ORE_1.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_QUARTZ_ORE_2 = BLOCKS.register("c2_nether_quartz_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_QUARTZ_ORE_2_ITEM = ITEMS.register("c2_nether_quartz_ore", () -> new BlockItem(NETHER_QUARTZ_ORE_2.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_QUARTZ_ORE_3 = BLOCKS.register("c3_nether_quartz_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_QUARTZ_ORE_3_ITEM = ITEMS.register("c3_nether_quartz_ore", () -> new BlockItem(NETHER_QUARTZ_ORE_3.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_QUARTZ_ORE_4 = BLOCKS.register("c4_nether_quartz_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_QUARTZ_ORE_4_ITEM = ITEMS.register("c4_nether_quartz_ore", () -> new BlockItem(NETHER_QUARTZ_ORE_4.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_QUARTZ_ORE_5 = BLOCKS.register("c5_nether_quartz_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_QUARTZ_ORE_5_ITEM = ITEMS.register("c5_nether_quartz_ore", () -> new BlockItem(NETHER_QUARTZ_ORE_5.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_QUARTZ_ORE_6 = BLOCKS.register("c6_nether_quartz_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_QUARTZ_ORE_6_ITEM = ITEMS.register("c6_nether_quartz_ore", () -> new BlockItem(NETHER_QUARTZ_ORE_6.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_QUARTZ_ORE_7 = BLOCKS.register("c7_nether_quartz_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_QUARTZ_ORE_7_ITEM = ITEMS.register("c7_nether_quartz_ore", () -> new BlockItem(NETHER_QUARTZ_ORE_7.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_QUARTZ_ORE_8 = BLOCKS.register("c8_nether_quartz_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_QUARTZ_ORE_8_ITEM = ITEMS.register("c8_nether_quartz_ore", () -> new BlockItem(NETHER_QUARTZ_ORE_8.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_QUARTZ_ORE_9 = BLOCKS.register("c9_nether_quartz_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_QUARTZ_ORE_9_ITEM = ITEMS.register("c9_nether_quartz_ore", () -> new BlockItem(NETHER_QUARTZ_ORE_9.get(), PROPERTIES));
    public static final RegistryObject<Block> LAPIS_ORE_0 = BLOCKS.register("c0_lapis_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> LAPIS_ORE_0_ITEM = ITEMS.register("c0_lapis_ore", () -> new BlockItem(LAPIS_ORE_0.get(), PROPERTIES));
    public static final RegistryObject<Block> LAPIS_ORE_1 = BLOCKS.register("c1_lapis_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> LAPIS_ORE_1_ITEM = ITEMS.register("c1_lapis_ore", () -> new BlockItem(LAPIS_ORE_1.get(), PROPERTIES));
    public static final RegistryObject<Block> LAPIS_ORE_2 = BLOCKS.register("c2_lapis_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> LAPIS_ORE_2_ITEM = ITEMS.register("c2_lapis_ore", () -> new BlockItem(LAPIS_ORE_2.get(), PROPERTIES));
    public static final RegistryObject<Block> LAPIS_ORE_3 = BLOCKS.register("c3_lapis_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> LAPIS_ORE_3_ITEM = ITEMS.register("c3_lapis_ore", () -> new BlockItem(LAPIS_ORE_3.get(), PROPERTIES));
    public static final RegistryObject<Block> LAPIS_ORE_4 = BLOCKS.register("c4_lapis_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> LAPIS_ORE_4_ITEM = ITEMS.register("c4_lapis_ore", () -> new BlockItem(LAPIS_ORE_4.get(), PROPERTIES));
    public static final RegistryObject<Block> LAPIS_ORE_5 = BLOCKS.register("c5_lapis_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> LAPIS_ORE_5_ITEM = ITEMS.register("c5_lapis_ore", () -> new BlockItem(LAPIS_ORE_5.get(), PROPERTIES));
    public static final RegistryObject<Block> LAPIS_ORE_6 = BLOCKS.register("c6_lapis_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> LAPIS_ORE_6_ITEM = ITEMS.register("c6_lapis_ore", () -> new BlockItem(LAPIS_ORE_6.get(), PROPERTIES));
    public static final RegistryObject<Block> LAPIS_ORE_7 = BLOCKS.register("c7_lapis_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> LAPIS_ORE_7_ITEM = ITEMS.register("c7_lapis_ore", () -> new BlockItem(LAPIS_ORE_7.get(), PROPERTIES));
    public static final RegistryObject<Block> LAPIS_ORE_8 = BLOCKS.register("c8_lapis_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> LAPIS_ORE_8_ITEM = ITEMS.register("c8_lapis_ore", () -> new BlockItem(LAPIS_ORE_8.get(), PROPERTIES));
    public static final RegistryObject<Block> LAPIS_ORE_9 = BLOCKS.register("c9_lapis_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> LAPIS_ORE_9_ITEM = ITEMS.register("c9_lapis_ore", () -> new BlockItem(LAPIS_ORE_9.get(), PROPERTIES));
    public static final RegistryObject<Block> REDSTONE_ORE_0 = BLOCKS.register("c0_redstone_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> REDSTONE_ORE_0_ITEM = ITEMS.register("c0_redstone_ore", () -> new BlockItem(REDSTONE_ORE_0.get(), PROPERTIES));
    public static final RegistryObject<Block> REDSTONE_ORE_1 = BLOCKS.register("c1_redstone_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> REDSTONE_ORE_1_ITEM = ITEMS.register("c1_redstone_ore", () -> new BlockItem(REDSTONE_ORE_1.get(), PROPERTIES));
    public static final RegistryObject<Block> REDSTONE_ORE_2 = BLOCKS.register("c2_redstone_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> REDSTONE_ORE_2_ITEM = ITEMS.register("c2_redstone_ore", () -> new BlockItem(REDSTONE_ORE_2.get(), PROPERTIES));
    public static final RegistryObject<Block> REDSTONE_ORE_3 = BLOCKS.register("c3_redstone_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> REDSTONE_ORE_3_ITEM = ITEMS.register("c3_redstone_ore", () -> new BlockItem(REDSTONE_ORE_3.get(), PROPERTIES));
    public static final RegistryObject<Block> REDSTONE_ORE_4 = BLOCKS.register("c4_redstone_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> REDSTONE_ORE_4_ITEM = ITEMS.register("c4_redstone_ore", () -> new BlockItem(REDSTONE_ORE_4.get(), PROPERTIES));
    public static final RegistryObject<Block> REDSTONE_ORE_5 = BLOCKS.register("c5_redstone_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> REDSTONE_ORE_5_ITEM = ITEMS.register("c5_redstone_ore", () -> new BlockItem(REDSTONE_ORE_5.get(), PROPERTIES));
    public static final RegistryObject<Block> REDSTONE_ORE_6 = BLOCKS.register("c6_redstone_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> REDSTONE_ORE_6_ITEM = ITEMS.register("c6_redstone_ore", () -> new BlockItem(REDSTONE_ORE_6.get(), PROPERTIES));
    public static final RegistryObject<Block> REDSTONE_ORE_7 = BLOCKS.register("c7_redstone_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> REDSTONE_ORE_7_ITEM = ITEMS.register("c7_redstone_ore", () -> new BlockItem(REDSTONE_ORE_7.get(), PROPERTIES));
    public static final RegistryObject<Block> REDSTONE_ORE_8 = BLOCKS.register("c8_redstone_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> REDSTONE_ORE_8_ITEM = ITEMS.register("c8_redstone_ore", () -> new BlockItem(REDSTONE_ORE_8.get(), PROPERTIES));
    public static final RegistryObject<Block> REDSTONE_ORE_9 = BLOCKS.register("c9_redstone_ore", () -> new OreBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> REDSTONE_ORE_9_ITEM = ITEMS.register("c9_redstone_ore", () -> new BlockItem(REDSTONE_ORE_9.get(), PROPERTIES));
    public static final RegistryObject<Block> IRON_BLOCK_0 = BLOCKS.register("c0_iron_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> IRON_BLOCK_0_ITEM = ITEMS.register("c0_iron_block", () -> new BlockItem(IRON_BLOCK_0.get(), PROPERTIES));
    public static final RegistryObject<Block> IRON_BLOCK_1 = BLOCKS.register("c1_iron_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> IRON_BLOCK_1_ITEM = ITEMS.register("c1_iron_block", () -> new BlockItem(IRON_BLOCK_1.get(), PROPERTIES));
    public static final RegistryObject<Block> IRON_BLOCK_2 = BLOCKS.register("c2_iron_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> IRON_BLOCK_2_ITEM = ITEMS.register("c2_iron_block", () -> new BlockItem(IRON_BLOCK_2.get(), PROPERTIES));
    public static final RegistryObject<Block> IRON_BLOCK_3 = BLOCKS.register("c3_iron_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> IRON_BLOCK_3_ITEM = ITEMS.register("c3_iron_block", () -> new BlockItem(IRON_BLOCK_3.get(), PROPERTIES));
    public static final RegistryObject<Block> IRON_BLOCK_4 = BLOCKS.register("c4_iron_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> IRON_BLOCK_4_ITEM = ITEMS.register("c4_iron_block", () -> new BlockItem(IRON_BLOCK_4.get(), PROPERTIES));
    public static final RegistryObject<Block> IRON_BLOCK_5 = BLOCKS.register("c5_iron_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> IRON_BLOCK_5_ITEM = ITEMS.register("c5_iron_block", () -> new BlockItem(IRON_BLOCK_5.get(), PROPERTIES));
    public static final RegistryObject<Block> IRON_BLOCK_6 = BLOCKS.register("c6_iron_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> IRON_BLOCK_6_ITEM = ITEMS.register("c6_iron_block", () -> new BlockItem(IRON_BLOCK_6.get(), PROPERTIES));
    public static final RegistryObject<Block> IRON_BLOCK_7 = BLOCKS.register("c7_iron_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> IRON_BLOCK_7_ITEM = ITEMS.register("c7_iron_block", () -> new BlockItem(IRON_BLOCK_7.get(), PROPERTIES));
    public static final RegistryObject<Block> IRON_BLOCK_8 = BLOCKS.register("c8_iron_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> IRON_BLOCK_8_ITEM = ITEMS.register("c8_iron_block", () -> new BlockItem(IRON_BLOCK_8.get(), PROPERTIES));
    public static final RegistryObject<Block> IRON_BLOCK_9 = BLOCKS.register("c9_iron_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> IRON_BLOCK_9_ITEM = ITEMS.register("c9_iron_block", () -> new BlockItem(IRON_BLOCK_9.get(), PROPERTIES));
    public static final RegistryObject<Block> GOLD_BLOCK_0 = BLOCKS.register("c0_gold_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GOLD_BLOCK_0_ITEM = ITEMS.register("c0_gold_block", () -> new BlockItem(GOLD_BLOCK_0.get(), PROPERTIES));
    public static final RegistryObject<Block> GOLD_BLOCK_1 = BLOCKS.register("c1_gold_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GOLD_BLOCK_1_ITEM = ITEMS.register("c1_gold_block", () -> new BlockItem(GOLD_BLOCK_1.get(), PROPERTIES));
    public static final RegistryObject<Block> GOLD_BLOCK_2 = BLOCKS.register("c2_gold_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GOLD_BLOCK_2_ITEM = ITEMS.register("c2_gold_block", () -> new BlockItem(GOLD_BLOCK_2.get(), PROPERTIES));
    public static final RegistryObject<Block> GOLD_BLOCK_3 = BLOCKS.register("c3_gold_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GOLD_BLOCK_3_ITEM = ITEMS.register("c3_gold_block", () -> new BlockItem(GOLD_BLOCK_3.get(), PROPERTIES));
    public static final RegistryObject<Block> GOLD_BLOCK_4 = BLOCKS.register("c4_gold_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GOLD_BLOCK_4_ITEM = ITEMS.register("c4_gold_block", () -> new BlockItem(GOLD_BLOCK_4.get(), PROPERTIES));
    public static final RegistryObject<Block> GOLD_BLOCK_5 = BLOCKS.register("c5_gold_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GOLD_BLOCK_5_ITEM = ITEMS.register("c5_gold_block", () -> new BlockItem(GOLD_BLOCK_5.get(), PROPERTIES));
    public static final RegistryObject<Block> GOLD_BLOCK_6 = BLOCKS.register("c6_gold_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GOLD_BLOCK_6_ITEM = ITEMS.register("c6_gold_block", () -> new BlockItem(GOLD_BLOCK_6.get(), PROPERTIES));
    public static final RegistryObject<Block> GOLD_BLOCK_7 = BLOCKS.register("c7_gold_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GOLD_BLOCK_7_ITEM = ITEMS.register("c7_gold_block", () -> new BlockItem(GOLD_BLOCK_7.get(), PROPERTIES));
    public static final RegistryObject<Block> GOLD_BLOCK_8 = BLOCKS.register("c8_gold_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GOLD_BLOCK_8_ITEM = ITEMS.register("c8_gold_block", () -> new BlockItem(GOLD_BLOCK_8.get(), PROPERTIES));
    public static final RegistryObject<Block> GOLD_BLOCK_9 = BLOCKS.register("c9_gold_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> GOLD_BLOCK_9_ITEM = ITEMS.register("c9_gold_block", () -> new BlockItem(GOLD_BLOCK_9.get(), PROPERTIES));
    public static final RegistryObject<Block> LAPIS_BLOCK_0 = BLOCKS.register("c0_lapis_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> LAPIS_BLOCK_0_ITEM = ITEMS.register("c0_lapis_block", () -> new BlockItem(LAPIS_BLOCK_0.get(), PROPERTIES));
    public static final RegistryObject<Block> LAPIS_BLOCK_1 = BLOCKS.register("c1_lapis_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> LAPIS_BLOCK_1_ITEM = ITEMS.register("c1_lapis_block", () -> new BlockItem(LAPIS_BLOCK_1.get(), PROPERTIES));
    public static final RegistryObject<Block> LAPIS_BLOCK_2 = BLOCKS.register("c2_lapis_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> LAPIS_BLOCK_2_ITEM = ITEMS.register("c2_lapis_block", () -> new BlockItem(LAPIS_BLOCK_2.get(), PROPERTIES));
    public static final RegistryObject<Block> LAPIS_BLOCK_3 = BLOCKS.register("c3_lapis_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> LAPIS_BLOCK_3_ITEM = ITEMS.register("c3_lapis_block", () -> new BlockItem(LAPIS_BLOCK_3.get(), PROPERTIES));
    public static final RegistryObject<Block> LAPIS_BLOCK_4 = BLOCKS.register("c4_lapis_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> LAPIS_BLOCK_4_ITEM = ITEMS.register("c4_lapis_block", () -> new BlockItem(LAPIS_BLOCK_4.get(), PROPERTIES));
    public static final RegistryObject<Block> LAPIS_BLOCK_5 = BLOCKS.register("c5_lapis_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> LAPIS_BLOCK_5_ITEM = ITEMS.register("c5_lapis_block", () -> new BlockItem(LAPIS_BLOCK_5.get(), PROPERTIES));
    public static final RegistryObject<Block> LAPIS_BLOCK_6 = BLOCKS.register("c6_lapis_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> LAPIS_BLOCK_6_ITEM = ITEMS.register("c6_lapis_block", () -> new BlockItem(LAPIS_BLOCK_6.get(), PROPERTIES));
    public static final RegistryObject<Block> LAPIS_BLOCK_7 = BLOCKS.register("c7_lapis_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> LAPIS_BLOCK_7_ITEM = ITEMS.register("c7_lapis_block", () -> new BlockItem(LAPIS_BLOCK_7.get(), PROPERTIES));
    public static final RegistryObject<Block> LAPIS_BLOCK_8 = BLOCKS.register("c8_lapis_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> LAPIS_BLOCK_8_ITEM = ITEMS.register("c8_lapis_block", () -> new BlockItem(LAPIS_BLOCK_8.get(), PROPERTIES));
    public static final RegistryObject<Block> LAPIS_BLOCK_9 = BLOCKS.register("c9_lapis_block", () -> new Block(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> LAPIS_BLOCK_9_ITEM = ITEMS.register("c9_lapis_block", () -> new BlockItem(LAPIS_BLOCK_9.get(), PROPERTIES));
    public static final RegistryObject<Block> REDSTONE_BLOCK_0 = BLOCKS.register("c0_redstone_block", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> REDSTONE_BLOCK_0_ITEM = ITEMS.register("c0_redstone_block", () -> new BlockItem(REDSTONE_BLOCK_0.get(), PROPERTIES));
    public static final RegistryObject<Block> REDSTONE_BLOCK_1 = BLOCKS.register("c1_redstone_block", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> REDSTONE_BLOCK_1_ITEM = ITEMS.register("c1_redstone_block", () -> new BlockItem(REDSTONE_BLOCK_1.get(), PROPERTIES));
    public static final RegistryObject<Block> REDSTONE_BLOCK_2 = BLOCKS.register("c2_redstone_block", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> REDSTONE_BLOCK_2_ITEM = ITEMS.register("c2_redstone_block", () -> new BlockItem(REDSTONE_BLOCK_2.get(), PROPERTIES));
    public static final RegistryObject<Block> REDSTONE_BLOCK_3 = BLOCKS.register("c3_redstone_block", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> REDSTONE_BLOCK_3_ITEM = ITEMS.register("c3_redstone_block", () -> new BlockItem(REDSTONE_BLOCK_3.get(), PROPERTIES));
    public static final RegistryObject<Block> REDSTONE_BLOCK_4 = BLOCKS.register("c4_redstone_block", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> REDSTONE_BLOCK_4_ITEM = ITEMS.register("c4_redstone_block", () -> new BlockItem(REDSTONE_BLOCK_4.get(), PROPERTIES));
    public static final RegistryObject<Block> REDSTONE_BLOCK_5 = BLOCKS.register("c5_redstone_block", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> REDSTONE_BLOCK_5_ITEM = ITEMS.register("c5_redstone_block", () -> new BlockItem(REDSTONE_BLOCK_5.get(), PROPERTIES));
    public static final RegistryObject<Block> REDSTONE_BLOCK_6 = BLOCKS.register("c6_redstone_block", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> REDSTONE_BLOCK_6_ITEM = ITEMS.register("c6_redstone_block", () -> new BlockItem(REDSTONE_BLOCK_6.get(), PROPERTIES));
    public static final RegistryObject<Block> REDSTONE_BLOCK_7 = BLOCKS.register("c7_redstone_block", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> REDSTONE_BLOCK_7_ITEM = ITEMS.register("c7_redstone_block", () -> new BlockItem(REDSTONE_BLOCK_7.get(), PROPERTIES));
    public static final RegistryObject<Block> REDSTONE_BLOCK_8 = BLOCKS.register("c8_redstone_block", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> REDSTONE_BLOCK_8_ITEM = ITEMS.register("c8_redstone_block", () -> new BlockItem(REDSTONE_BLOCK_8.get(), PROPERTIES));
    public static final RegistryObject<Block> REDSTONE_BLOCK_9 = BLOCKS.register("c9_redstone_block", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.of(Material.HEAVY_METAL, MaterialColor.METAL).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> REDSTONE_BLOCK_9_ITEM = ITEMS.register("c9_redstone_block", () -> new BlockItem(REDSTONE_BLOCK_9.get(), PROPERTIES));
    public static final RegistryObject<Block> COAL_BLOCK_0 = BLOCKS.register("c0_coal_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COAL_BLOCK_0_ITEM = ITEMS.register("c0_coal_block", () -> new BlockItem(COAL_BLOCK_0.get(), PROPERTIES));
    public static final RegistryObject<Block> COAL_BLOCK_1 = BLOCKS.register("c1_coal_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COAL_BLOCK_1_ITEM = ITEMS.register("c1_coal_block", () -> new BlockItem(COAL_BLOCK_1.get(), PROPERTIES));
    public static final RegistryObject<Block> COAL_BLOCK_2 = BLOCKS.register("c2_coal_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COAL_BLOCK_2_ITEM = ITEMS.register("c2_coal_block", () -> new BlockItem(COAL_BLOCK_2.get(), PROPERTIES));
    public static final RegistryObject<Block> COAL_BLOCK_3 = BLOCKS.register("c3_coal_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COAL_BLOCK_3_ITEM = ITEMS.register("c3_coal_block", () -> new BlockItem(COAL_BLOCK_3.get(), PROPERTIES));
    public static final RegistryObject<Block> COAL_BLOCK_4 = BLOCKS.register("c4_coal_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COAL_BLOCK_4_ITEM = ITEMS.register("c4_coal_block", () -> new BlockItem(COAL_BLOCK_4.get(), PROPERTIES));
    public static final RegistryObject<Block> COAL_BLOCK_5 = BLOCKS.register("c5_coal_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COAL_BLOCK_5_ITEM = ITEMS.register("c5_coal_block", () -> new BlockItem(COAL_BLOCK_5.get(), PROPERTIES));
    public static final RegistryObject<Block> COAL_BLOCK_6 = BLOCKS.register("c6_coal_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COAL_BLOCK_6_ITEM = ITEMS.register("c6_coal_block", () -> new BlockItem(COAL_BLOCK_6.get(), PROPERTIES));
    public static final RegistryObject<Block> COAL_BLOCK_7 = BLOCKS.register("c7_coal_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COAL_BLOCK_7_ITEM = ITEMS.register("c7_coal_block", () -> new BlockItem(COAL_BLOCK_7.get(), PROPERTIES));
    public static final RegistryObject<Block> COAL_BLOCK_8 = BLOCKS.register("c8_coal_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COAL_BLOCK_8_ITEM = ITEMS.register("c8_coal_block", () -> new BlockItem(COAL_BLOCK_8.get(), PROPERTIES));
    public static final RegistryObject<Block> COAL_BLOCK_9 = BLOCKS.register("c9_coal_block", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> COAL_BLOCK_9_ITEM = ITEMS.register("c9_coal_block", () -> new BlockItem(COAL_BLOCK_9.get(), PROPERTIES));
    public static final RegistryObject<Block> SLIME_BLOCK_0 = BLOCKS.register("c0_slime_block", () -> new SlimeBlock(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.GRASS).strength(3.0F, 10.0F).noOcclusion()));
    public static final RegistryObject<Item> SLIME_BLOCK_0_ITEM = ITEMS.register("c0_slime_block", () -> new BlockItem(SLIME_BLOCK_0.get(), PROPERTIES));
    public static final RegistryObject<Block> SLIME_BLOCK_1 = BLOCKS.register("c1_slime_block", () -> new SlimeBlock(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.GRASS).strength(4.0F, 20.0F).noOcclusion()));
    public static final RegistryObject<Item> SLIME_BLOCK_1_ITEM = ITEMS.register("c1_slime_block", () -> new BlockItem(SLIME_BLOCK_1.get(), PROPERTIES));
    public static final RegistryObject<Block> SLIME_BLOCK_2 = BLOCKS.register("c2_slime_block", () -> new SlimeBlock(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.GRASS).strength(5.0F, 60.0F).noOcclusion()));
    public static final RegistryObject<Item> SLIME_BLOCK_2_ITEM = ITEMS.register("c2_slime_block", () -> new BlockItem(SLIME_BLOCK_2.get(), PROPERTIES));
    public static final RegistryObject<Block> SLIME_BLOCK_3 = BLOCKS.register("c3_slime_block", () -> new SlimeBlock(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.GRASS).strength(6.0F, 150.0F).noOcclusion()));
    public static final RegistryObject<Item> SLIME_BLOCK_3_ITEM = ITEMS.register("c3_slime_block", () -> new BlockItem(SLIME_BLOCK_3.get(), PROPERTIES));
    public static final RegistryObject<Block> SLIME_BLOCK_4 = BLOCKS.register("c4_slime_block", () -> new SlimeBlock(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.GRASS).strength(7.0F, 300.0F).noOcclusion()));
    public static final RegistryObject<Item> SLIME_BLOCK_4_ITEM = ITEMS.register("c4_slime_block", () -> new BlockItem(SLIME_BLOCK_4.get(), PROPERTIES));
    public static final RegistryObject<Block> SLIME_BLOCK_5 = BLOCKS.register("c5_slime_block", () -> new SlimeBlock(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.GRASS).strength(8.0F, 500.0F).noOcclusion()));
    public static final RegistryObject<Item> SLIME_BLOCK_5_ITEM = ITEMS.register("c5_slime_block", () -> new BlockItem(SLIME_BLOCK_5.get(), PROPERTIES));
    public static final RegistryObject<Block> SLIME_BLOCK_6 = BLOCKS.register("c6_slime_block", () -> new SlimeBlock(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.GRASS).strength(9.0F, 850.0F).noOcclusion()));
    public static final RegistryObject<Item> SLIME_BLOCK_6_ITEM = ITEMS.register("c6_slime_block", () -> new BlockItem(SLIME_BLOCK_6.get(), PROPERTIES));
    public static final RegistryObject<Block> SLIME_BLOCK_7 = BLOCKS.register("c7_slime_block", () -> new SlimeBlock(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.GRASS).strength(10.0F, 1200.0F).noOcclusion()));
    public static final RegistryObject<Item> SLIME_BLOCK_7_ITEM = ITEMS.register("c7_slime_block", () -> new BlockItem(SLIME_BLOCK_7.get(), PROPERTIES));
    public static final RegistryObject<Block> SLIME_BLOCK_8 = BLOCKS.register("c8_slime_block", () -> new SlimeBlock(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.GRASS).strength(15.0F, 2000.0F).noOcclusion()));
    public static final RegistryObject<Item> SLIME_BLOCK_8_ITEM = ITEMS.register("c8_slime_block", () -> new BlockItem(SLIME_BLOCK_8.get(), PROPERTIES));
    public static final RegistryObject<Block> SLIME_BLOCK_9 = BLOCKS.register("c9_slime_block", () -> new SlimeBlock(BlockBehaviour.Properties.of(Material.CLAY, MaterialColor.GRASS).strength(20.0F, 5000.0F).noOcclusion()));
    public static final RegistryObject<Item> SLIME_BLOCK_9_ITEM = ITEMS.register("c9_slime_block", () -> new BlockItem(SLIME_BLOCK_9.get(), PROPERTIES));
    public static final RegistryObject<Block> BRICKS_0 = BLOCKS.register("c0_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> BRICKS_0_ITEM = ITEMS.register("c0_bricks", () -> new BlockItem(BRICKS_0.get(), PROPERTIES));
    public static final RegistryObject<Block> BRICKS_1 = BLOCKS.register("c1_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> BRICKS_1_ITEM = ITEMS.register("c1_bricks", () -> new BlockItem(BRICKS_1.get(), PROPERTIES));
    public static final RegistryObject<Block> BRICKS_2 = BLOCKS.register("c2_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> BRICKS_2_ITEM = ITEMS.register("c2_bricks", () -> new BlockItem(BRICKS_2.get(), PROPERTIES));
    public static final RegistryObject<Block> BRICKS_3 = BLOCKS.register("c3_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> BRICKS_3_ITEM = ITEMS.register("c3_bricks", () -> new BlockItem(BRICKS_3.get(), PROPERTIES));
    public static final RegistryObject<Block> BRICKS_4 = BLOCKS.register("c4_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> BRICKS_4_ITEM = ITEMS.register("c4_bricks", () -> new BlockItem(BRICKS_4.get(), PROPERTIES));
    public static final RegistryObject<Block> BRICKS_5 = BLOCKS.register("c5_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> BRICKS_5_ITEM = ITEMS.register("c5_bricks", () -> new BlockItem(BRICKS_5.get(), PROPERTIES));
    public static final RegistryObject<Block> BRICKS_6 = BLOCKS.register("c6_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> BRICKS_6_ITEM = ITEMS.register("c6_bricks", () -> new BlockItem(BRICKS_6.get(), PROPERTIES));
    public static final RegistryObject<Block> BRICKS_7 = BLOCKS.register("c7_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> BRICKS_7_ITEM = ITEMS.register("c7_bricks", () -> new BlockItem(BRICKS_7.get(), PROPERTIES));
    public static final RegistryObject<Block> BRICKS_8 = BLOCKS.register("c8_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> BRICKS_8_ITEM = ITEMS.register("c8_bricks", () -> new BlockItem(BRICKS_8.get(), PROPERTIES));
    public static final RegistryObject<Block> BRICKS_9 = BLOCKS.register("c9_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> BRICKS_9_ITEM = ITEMS.register("c9_bricks", () -> new BlockItem(BRICKS_9.get(), PROPERTIES));
    public static final RegistryObject<Block> STONE_BRICKS_0 = BLOCKS.register("c0_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> STONE_BRICKS_0_ITEM = ITEMS.register("c0_stone_bricks", () -> new BlockItem(STONE_BRICKS_0.get(), PROPERTIES));
    public static final RegistryObject<Block> STONE_BRICKS_1 = BLOCKS.register("c1_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> STONE_BRICKS_1_ITEM = ITEMS.register("c1_stone_bricks", () -> new BlockItem(STONE_BRICKS_1.get(), PROPERTIES));
    public static final RegistryObject<Block> STONE_BRICKS_2 = BLOCKS.register("c2_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> STONE_BRICKS_2_ITEM = ITEMS.register("c2_stone_bricks", () -> new BlockItem(STONE_BRICKS_2.get(), PROPERTIES));
    public static final RegistryObject<Block> STONE_BRICKS_3 = BLOCKS.register("c3_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> STONE_BRICKS_3_ITEM = ITEMS.register("c3_stone_bricks", () -> new BlockItem(STONE_BRICKS_3.get(), PROPERTIES));
    public static final RegistryObject<Block> STONE_BRICKS_4 = BLOCKS.register("c4_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> STONE_BRICKS_4_ITEM = ITEMS.register("c4_stone_bricks", () -> new BlockItem(STONE_BRICKS_4.get(), PROPERTIES));
    public static final RegistryObject<Block> STONE_BRICKS_5 = BLOCKS.register("c5_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> STONE_BRICKS_5_ITEM = ITEMS.register("c5_stone_bricks", () -> new BlockItem(STONE_BRICKS_5.get(), PROPERTIES));
    public static final RegistryObject<Block> STONE_BRICKS_6 = BLOCKS.register("c6_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> STONE_BRICKS_6_ITEM = ITEMS.register("c6_stone_bricks", () -> new BlockItem(STONE_BRICKS_6.get(), PROPERTIES));
    public static final RegistryObject<Block> STONE_BRICKS_7 = BLOCKS.register("c7_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> STONE_BRICKS_7_ITEM = ITEMS.register("c7_stone_bricks", () -> new BlockItem(STONE_BRICKS_7.get(), PROPERTIES));
    public static final RegistryObject<Block> STONE_BRICKS_8 = BLOCKS.register("c8_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> STONE_BRICKS_8_ITEM = ITEMS.register("c8_stone_bricks", () -> new BlockItem(STONE_BRICKS_8.get(), PROPERTIES));
    public static final RegistryObject<Block> STONE_BRICKS_9 = BLOCKS.register("c9_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.STONE).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> STONE_BRICKS_9_ITEM = ITEMS.register("c9_stone_bricks", () -> new BlockItem(STONE_BRICKS_9.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHERRACK_0 = BLOCKS.register("c0_netherrack", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHERRACK_0_ITEM = ITEMS.register("c0_netherrack", () -> new BlockItem(NETHERRACK_0.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHERRACK_1 = BLOCKS.register("c1_netherrack", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHERRACK_1_ITEM = ITEMS.register("c1_netherrack", () -> new BlockItem(NETHERRACK_1.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHERRACK_2 = BLOCKS.register("c2_netherrack", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHERRACK_2_ITEM = ITEMS.register("c2_netherrack", () -> new BlockItem(NETHERRACK_2.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHERRACK_3 = BLOCKS.register("c3_netherrack", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHERRACK_3_ITEM = ITEMS.register("c3_netherrack", () -> new BlockItem(NETHERRACK_3.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHERRACK_4 = BLOCKS.register("c4_netherrack", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHERRACK_4_ITEM = ITEMS.register("c4_netherrack", () -> new BlockItem(NETHERRACK_4.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHERRACK_5 = BLOCKS.register("c5_netherrack", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHERRACK_5_ITEM = ITEMS.register("c5_netherrack", () -> new BlockItem(NETHERRACK_5.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHERRACK_6 = BLOCKS.register("c6_netherrack", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHERRACK_6_ITEM = ITEMS.register("c6_netherrack", () -> new BlockItem(NETHERRACK_6.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHERRACK_7 = BLOCKS.register("c7_netherrack", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHERRACK_7_ITEM = ITEMS.register("c7_netherrack", () -> new BlockItem(NETHERRACK_7.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHERRACK_8 = BLOCKS.register("c8_netherrack", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHERRACK_8_ITEM = ITEMS.register("c8_netherrack", () -> new BlockItem(NETHERRACK_8.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHERRACK_9 = BLOCKS.register("c9_netherrack", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHERRACK_9_ITEM = ITEMS.register("c9_netherrack", () -> new BlockItem(NETHERRACK_9.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_BRICKS_0 = BLOCKS.register("c0_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_BRICKS_0_ITEM = ITEMS.register("c0_nether_bricks", () -> new BlockItem(NETHER_BRICKS_0.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_BRICKS_1 = BLOCKS.register("c1_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_BRICKS_1_ITEM = ITEMS.register("c1_nether_bricks", () -> new BlockItem(NETHER_BRICKS_1.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_BRICKS_2 = BLOCKS.register("c2_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_BRICKS_2_ITEM = ITEMS.register("c2_nether_bricks", () -> new BlockItem(NETHER_BRICKS_2.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_BRICKS_3 = BLOCKS.register("c3_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_BRICKS_3_ITEM = ITEMS.register("c3_nether_bricks", () -> new BlockItem(NETHER_BRICKS_3.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_BRICKS_4 = BLOCKS.register("c4_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_BRICKS_4_ITEM = ITEMS.register("c4_nether_bricks", () -> new BlockItem(NETHER_BRICKS_4.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_BRICKS_5 = BLOCKS.register("c5_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_BRICKS_5_ITEM = ITEMS.register("c5_nether_bricks", () -> new BlockItem(NETHER_BRICKS_5.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_BRICKS_6 = BLOCKS.register("c6_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_BRICKS_6_ITEM = ITEMS.register("c6_nether_bricks", () -> new BlockItem(NETHER_BRICKS_6.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_BRICKS_7 = BLOCKS.register("c7_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_BRICKS_7_ITEM = ITEMS.register("c7_nether_bricks", () -> new BlockItem(NETHER_BRICKS_7.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_BRICKS_8 = BLOCKS.register("c8_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_BRICKS_8_ITEM = ITEMS.register("c8_nether_bricks", () -> new BlockItem(NETHER_BRICKS_8.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_BRICKS_9 = BLOCKS.register("c9_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> NETHER_BRICKS_9_ITEM = ITEMS.register("c9_nether_bricks", () -> new BlockItem(NETHER_BRICKS_9.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_NETHER_BRICKS_0 = BLOCKS.register("c0_red_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> RED_NETHER_BRICKS_0_ITEM = ITEMS.register("c0_red_nether_bricks", () -> new BlockItem(RED_NETHER_BRICKS_0.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_NETHER_BRICKS_1 = BLOCKS.register("c1_red_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> RED_NETHER_BRICKS_1_ITEM = ITEMS.register("c1_red_nether_bricks", () -> new BlockItem(RED_NETHER_BRICKS_1.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_NETHER_BRICKS_2 = BLOCKS.register("c2_red_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> RED_NETHER_BRICKS_2_ITEM = ITEMS.register("c2_red_nether_bricks", () -> new BlockItem(RED_NETHER_BRICKS_2.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_NETHER_BRICKS_3 = BLOCKS.register("c3_red_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> RED_NETHER_BRICKS_3_ITEM = ITEMS.register("c3_red_nether_bricks", () -> new BlockItem(RED_NETHER_BRICKS_3.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_NETHER_BRICKS_4 = BLOCKS.register("c4_red_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> RED_NETHER_BRICKS_4_ITEM = ITEMS.register("c4_red_nether_bricks", () -> new BlockItem(RED_NETHER_BRICKS_4.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_NETHER_BRICKS_5 = BLOCKS.register("c5_red_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> RED_NETHER_BRICKS_5_ITEM = ITEMS.register("c5_red_nether_bricks", () -> new BlockItem(RED_NETHER_BRICKS_5.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_NETHER_BRICKS_6 = BLOCKS.register("c6_red_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> RED_NETHER_BRICKS_6_ITEM = ITEMS.register("c6_red_nether_bricks", () -> new BlockItem(RED_NETHER_BRICKS_6.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_NETHER_BRICKS_7 = BLOCKS.register("c7_red_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> RED_NETHER_BRICKS_7_ITEM = ITEMS.register("c7_red_nether_bricks", () -> new BlockItem(RED_NETHER_BRICKS_7.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_NETHER_BRICKS_8 = BLOCKS.register("c8_red_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> RED_NETHER_BRICKS_8_ITEM = ITEMS.register("c8_red_nether_bricks", () -> new BlockItem(RED_NETHER_BRICKS_8.get(), PROPERTIES));
    public static final RegistryObject<Block> RED_NETHER_BRICKS_9 = BLOCKS.register("c9_red_nether_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).strength(55.0F, 5000.0F)));
    public static final RegistryObject<Item> RED_NETHER_BRICKS_9_ITEM = ITEMS.register("c9_red_nether_bricks", () -> new BlockItem(RED_NETHER_BRICKS_9.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_WART_BLOCK_0 = BLOCKS.register("c0_nether_wart_block", () -> new Block(BlockBehaviour.Properties.of(Material.GRASS, MaterialColor.COLOR_RED).strength(3.0F, 10.0F)));
    public static final RegistryObject<Item> NETHER_WART_BLOCK_0_ITEM = ITEMS.register("c0_nether_wart_block", () -> new BlockItem(NETHER_WART_BLOCK_0.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_WART_BLOCK_1 = BLOCKS.register("c1_nether_wart_block", () -> new Block(BlockBehaviour.Properties.of(Material.GRASS, MaterialColor.COLOR_RED).strength(4.0F, 20.0F)));
    public static final RegistryObject<Item> NETHER_WART_BLOCK_1_ITEM = ITEMS.register("c1_nether_wart_block", () -> new BlockItem(NETHER_WART_BLOCK_1.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_WART_BLOCK_2 = BLOCKS.register("c2_nether_wart_block", () -> new Block(BlockBehaviour.Properties.of(Material.GRASS, MaterialColor.COLOR_RED).strength(5.0F, 60.0F)));
    public static final RegistryObject<Item> NETHER_WART_BLOCK_2_ITEM = ITEMS.register("c2_nether_wart_block", () -> new BlockItem(NETHER_WART_BLOCK_2.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_WART_BLOCK_3 = BLOCKS.register("c3_nether_wart_block", () -> new Block(BlockBehaviour.Properties.of(Material.GRASS, MaterialColor.COLOR_RED).strength(6.0F, 150.0F)));
    public static final RegistryObject<Item> NETHER_WART_BLOCK_3_ITEM = ITEMS.register("c3_nether_wart_block", () -> new BlockItem(NETHER_WART_BLOCK_3.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_WART_BLOCK_4 = BLOCKS.register("c4_nether_wart_block", () -> new Block(BlockBehaviour.Properties.of(Material.GRASS, MaterialColor.COLOR_RED).strength(7.0F, 300.0F)));
    public static final RegistryObject<Item> NETHER_WART_BLOCK_4_ITEM = ITEMS.register("c4_nether_wart_block", () -> new BlockItem(NETHER_WART_BLOCK_4.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_WART_BLOCK_5 = BLOCKS.register("c5_nether_wart_block", () -> new Block(BlockBehaviour.Properties.of(Material.GRASS, MaterialColor.COLOR_RED).strength(8.0F, 500.0F)));
    public static final RegistryObject<Item> NETHER_WART_BLOCK_5_ITEM = ITEMS.register("c5_nether_wart_block", () -> new BlockItem(NETHER_WART_BLOCK_5.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_WART_BLOCK_6 = BLOCKS.register("c6_nether_wart_block", () -> new Block(BlockBehaviour.Properties.of(Material.GRASS, MaterialColor.COLOR_RED).strength(9.0F, 850.0F)));
    public static final RegistryObject<Item> NETHER_WART_BLOCK_6_ITEM = ITEMS.register("c6_nether_wart_block", () -> new BlockItem(NETHER_WART_BLOCK_6.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_WART_BLOCK_7 = BLOCKS.register("c7_nether_wart_block", () -> new Block(BlockBehaviour.Properties.of(Material.GRASS, MaterialColor.COLOR_RED).strength(10.0F, 1200.0F)));
    public static final RegistryObject<Item> NETHER_WART_BLOCK_7_ITEM = ITEMS.register("c7_nether_wart_block", () -> new BlockItem(NETHER_WART_BLOCK_7.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_WART_BLOCK_8 = BLOCKS.register("c8_nether_wart_block", () -> new Block(BlockBehaviour.Properties.of(Material.GRASS, MaterialColor.COLOR_RED).strength(15.0F, 2000.0F)));
    public static final RegistryObject<Item> NETHER_WART_BLOCK_8_ITEM = ITEMS.register("c8_nether_wart_block", () -> new BlockItem(NETHER_WART_BLOCK_8.get(), PROPERTIES));
    public static final RegistryObject<Block> NETHER_WART_BLOCK_9 = BLOCKS.register("c9_nether_wart_block", () -> new Block(BlockBehaviour.Properties.of(Material.GRASS, MaterialColor.COLOR_RED).strength(20.0F, 5000.0F)));
    public static final RegistryObject<Item> NETHER_WART_BLOCK_9_ITEM = ITEMS.register("c9_nether_wart_block", () -> new BlockItem(NETHER_WART_BLOCK_9.get(), PROPERTIES));
    public static final RegistryObject<Block> SOUL_SAND_0 = BLOCKS.register("c0_soul_sand", () -> new SoulSandBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SOUL_SAND_0_ITEM = ITEMS.register("c0_soul_sand", () -> new BlockItem(SOUL_SAND_0.get(), PROPERTIES));
    public static final RegistryObject<Block> SOUL_SAND_1 = BLOCKS.register("c1_soul_sand", () -> new SoulSandBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SOUL_SAND_1_ITEM = ITEMS.register("c1_soul_sand", () -> new BlockItem(SOUL_SAND_1.get(), PROPERTIES));
    public static final RegistryObject<Block> SOUL_SAND_2 = BLOCKS.register("c2_soul_sand", () -> new SoulSandBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SOUL_SAND_2_ITEM = ITEMS.register("c2_soul_sand", () -> new BlockItem(SOUL_SAND_2.get(), PROPERTIES));
    public static final RegistryObject<Block> SOUL_SAND_3 = BLOCKS.register("c3_soul_sand", () -> new SoulSandBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SOUL_SAND_3_ITEM = ITEMS.register("c3_soul_sand", () -> new BlockItem(SOUL_SAND_3.get(), PROPERTIES));
    public static final RegistryObject<Block> SOUL_SAND_4 = BLOCKS.register("c4_soul_sand", () -> new SoulSandBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SOUL_SAND_4_ITEM = ITEMS.register("c4_soul_sand", () -> new BlockItem(SOUL_SAND_4.get(), PROPERTIES));
    public static final RegistryObject<Block> SOUL_SAND_5 = BLOCKS.register("c5_soul_sand", () -> new SoulSandBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SOUL_SAND_5_ITEM = ITEMS.register("c5_soul_sand", () -> new BlockItem(SOUL_SAND_5.get(), PROPERTIES));
    public static final RegistryObject<Block> SOUL_SAND_6 = BLOCKS.register("c6_soul_sand", () -> new SoulSandBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SOUL_SAND_6_ITEM = ITEMS.register("c6_soul_sand", () -> new BlockItem(SOUL_SAND_6.get(), PROPERTIES));
    public static final RegistryObject<Block> SOUL_SAND_7 = BLOCKS.register("c7_soul_sand", () -> new SoulSandBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SOUL_SAND_7_ITEM = ITEMS.register("c7_soul_sand", () -> new BlockItem(SOUL_SAND_7.get(), PROPERTIES));
    public static final RegistryObject<Block> SOUL_SAND_8 = BLOCKS.register("c8_soul_sand", () -> new SoulSandBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SOUL_SAND_8_ITEM = ITEMS.register("c8_soul_sand", () -> new BlockItem(SOUL_SAND_8.get(), PROPERTIES));
    public static final RegistryObject<Block> SOUL_SAND_9 = BLOCKS.register("c9_soul_sand", () -> new SoulSandBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SOUL_SAND_9_ITEM = ITEMS.register("c9_soul_sand", () -> new BlockItem(SOUL_SAND_9.get(), PROPERTIES));
    public static final RegistryObject<Block> SOUL_SOIL_0 = BLOCKS.register("c0_soul_soil", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.COLOR_BROWN).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SOUL_SOIL_0_ITEM = ITEMS.register("c0_soul_soil", () -> new BlockItem(SOUL_SOIL_0.get(), PROPERTIES));
    public static final RegistryObject<Block> SOUL_SOIL_1 = BLOCKS.register("c1_soul_soil", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.COLOR_BROWN).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SOUL_SOIL_1_ITEM = ITEMS.register("c1_soul_soil", () -> new BlockItem(SOUL_SOIL_1.get(), PROPERTIES));
    public static final RegistryObject<Block> SOUL_SOIL_2 = BLOCKS.register("c2_soul_soil", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.COLOR_BROWN).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SOUL_SOIL_2_ITEM = ITEMS.register("c2_soul_soil", () -> new BlockItem(SOUL_SOIL_2.get(), PROPERTIES));
    public static final RegistryObject<Block> SOUL_SOIL_3 = BLOCKS.register("c3_soul_soil", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.COLOR_BROWN).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SOUL_SOIL_3_ITEM = ITEMS.register("c3_soul_soil", () -> new BlockItem(SOUL_SOIL_3.get(), PROPERTIES));
    public static final RegistryObject<Block> SOUL_SOIL_4 = BLOCKS.register("c4_soul_soil", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.COLOR_BROWN).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SOUL_SOIL_4_ITEM = ITEMS.register("c4_soul_soil", () -> new BlockItem(SOUL_SOIL_4.get(), PROPERTIES));
    public static final RegistryObject<Block> SOUL_SOIL_5 = BLOCKS.register("c5_soul_soil", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.COLOR_BROWN).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SOUL_SOIL_5_ITEM = ITEMS.register("c5_soul_soil", () -> new BlockItem(SOUL_SOIL_5.get(), PROPERTIES));
    public static final RegistryObject<Block> SOUL_SOIL_6 = BLOCKS.register("c6_soul_soil", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.COLOR_BROWN).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SOUL_SOIL_6_ITEM = ITEMS.register("c6_soul_soil", () -> new BlockItem(SOUL_SOIL_6.get(), PROPERTIES));
    public static final RegistryObject<Block> SOUL_SOIL_7 = BLOCKS.register("c7_soul_soil", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.COLOR_BROWN).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SOUL_SOIL_7_ITEM = ITEMS.register("c7_soul_soil", () -> new BlockItem(SOUL_SOIL_7.get(), PROPERTIES));
    public static final RegistryObject<Block> SOUL_SOIL_8 = BLOCKS.register("c8_soul_soil", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.COLOR_BROWN).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SOUL_SOIL_8_ITEM = ITEMS.register("c8_soul_soil", () -> new BlockItem(SOUL_SOIL_8.get(), PROPERTIES));
    public static final RegistryObject<Block> SOUL_SOIL_9 = BLOCKS.register("c9_soul_soil", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT, MaterialColor.COLOR_BROWN).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> SOUL_SOIL_9_ITEM = ITEMS.register("c9_soul_soil", () -> new BlockItem(SOUL_SOIL_9.get(), PROPERTIES));
    public static final RegistryObject<Block> END_STONE_0 = BLOCKS.register("c0_end_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> END_STONE_0_ITEM = ITEMS.register("c0_end_stone", () -> new BlockItem(END_STONE_0.get(), PROPERTIES));
    public static final RegistryObject<Block> END_STONE_1 = BLOCKS.register("c1_end_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> END_STONE_1_ITEM = ITEMS.register("c1_end_stone", () -> new BlockItem(END_STONE_1.get(), PROPERTIES));
    public static final RegistryObject<Block> END_STONE_2 = BLOCKS.register("c2_end_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> END_STONE_2_ITEM = ITEMS.register("c2_end_stone", () -> new BlockItem(END_STONE_2.get(), PROPERTIES));
    public static final RegistryObject<Block> END_STONE_3 = BLOCKS.register("c3_end_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> END_STONE_3_ITEM = ITEMS.register("c3_end_stone", () -> new BlockItem(END_STONE_3.get(), PROPERTIES));
    public static final RegistryObject<Block> END_STONE_4 = BLOCKS.register("c4_end_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> END_STONE_4_ITEM = ITEMS.register("c4_end_stone", () -> new BlockItem(END_STONE_4.get(), PROPERTIES));
    public static final RegistryObject<Block> END_STONE_5 = BLOCKS.register("c5_end_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> END_STONE_5_ITEM = ITEMS.register("c5_end_stone", () -> new BlockItem(END_STONE_5.get(), PROPERTIES));
    public static final RegistryObject<Block> END_STONE_6 = BLOCKS.register("c6_end_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> END_STONE_6_ITEM = ITEMS.register("c6_end_stone", () -> new BlockItem(END_STONE_6.get(), PROPERTIES));
    public static final RegistryObject<Block> END_STONE_7 = BLOCKS.register("c7_end_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> END_STONE_7_ITEM = ITEMS.register("c7_end_stone", () -> new BlockItem(END_STONE_7.get(), PROPERTIES));
    public static final RegistryObject<Block> END_STONE_8 = BLOCKS.register("c8_end_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> END_STONE_8_ITEM = ITEMS.register("c8_end_stone", () -> new BlockItem(END_STONE_8.get(), PROPERTIES));
    public static final RegistryObject<Block> END_STONE_9 = BLOCKS.register("c9_end_stone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> END_STONE_9_ITEM = ITEMS.register("c9_end_stone", () -> new BlockItem(END_STONE_9.get(), PROPERTIES));
    public static final RegistryObject<Block> END_STONE_BRICKS_0 = BLOCKS.register("c0_end_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> END_STONE_BRICKS_0_ITEM = ITEMS.register("c0_end_stone_bricks", () -> new BlockItem(END_STONE_BRICKS_0.get(), PROPERTIES));
    public static final RegistryObject<Block> END_STONE_BRICKS_1 = BLOCKS.register("c1_end_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> END_STONE_BRICKS_1_ITEM = ITEMS.register("c1_end_stone_bricks", () -> new BlockItem(END_STONE_BRICKS_1.get(), PROPERTIES));
    public static final RegistryObject<Block> END_STONE_BRICKS_2 = BLOCKS.register("c2_end_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> END_STONE_BRICKS_2_ITEM = ITEMS.register("c2_end_stone_bricks", () -> new BlockItem(END_STONE_BRICKS_2.get(), PROPERTIES));
    public static final RegistryObject<Block> END_STONE_BRICKS_3 = BLOCKS.register("c3_end_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> END_STONE_BRICKS_3_ITEM = ITEMS.register("c3_end_stone_bricks", () -> new BlockItem(END_STONE_BRICKS_3.get(), PROPERTIES));
    public static final RegistryObject<Block> END_STONE_BRICKS_4 = BLOCKS.register("c4_end_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> END_STONE_BRICKS_4_ITEM = ITEMS.register("c4_end_stone_bricks", () -> new BlockItem(END_STONE_BRICKS_4.get(), PROPERTIES));
    public static final RegistryObject<Block> END_STONE_BRICKS_5 = BLOCKS.register("c5_end_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> END_STONE_BRICKS_5_ITEM = ITEMS.register("c5_end_stone_bricks", () -> new BlockItem(END_STONE_BRICKS_5.get(), PROPERTIES));
    public static final RegistryObject<Block> END_STONE_BRICKS_6 = BLOCKS.register("c6_end_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> END_STONE_BRICKS_6_ITEM = ITEMS.register("c6_end_stone_bricks", () -> new BlockItem(END_STONE_BRICKS_6.get(), PROPERTIES));
    public static final RegistryObject<Block> END_STONE_BRICKS_7 = BLOCKS.register("c7_end_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> END_STONE_BRICKS_7_ITEM = ITEMS.register("c7_end_stone_bricks", () -> new BlockItem(END_STONE_BRICKS_7.get(), PROPERTIES));
    public static final RegistryObject<Block> END_STONE_BRICKS_8 = BLOCKS.register("c8_end_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> END_STONE_BRICKS_8_ITEM = ITEMS.register("c8_end_stone_bricks", () -> new BlockItem(END_STONE_BRICKS_8.get(), PROPERTIES));
    public static final RegistryObject<Block> END_STONE_BRICKS_9 = BLOCKS.register("c9_end_stone_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SAND).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> END_STONE_BRICKS_9_ITEM = ITEMS.register("c9_end_stone_bricks", () -> new BlockItem(END_STONE_BRICKS_9.get(), PROPERTIES));
    public static final RegistryObject<Block> BLACKSTONE_0 = BLOCKS.register("c0_blackstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> BLACKSTONE_0_ITEM = ITEMS.register("c0_blackstone", () -> new BlockItem(BLACKSTONE_0.get(), PROPERTIES));
    public static final RegistryObject<Block> BLACKSTONE_1 = BLOCKS.register("c1_blackstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> BLACKSTONE_1_ITEM = ITEMS.register("c1_blackstone", () -> new BlockItem(BLACKSTONE_1.get(), PROPERTIES));
    public static final RegistryObject<Block> BLACKSTONE_2 = BLOCKS.register("c2_blackstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> BLACKSTONE_2_ITEM = ITEMS.register("c2_blackstone", () -> new BlockItem(BLACKSTONE_2.get(), PROPERTIES));
    public static final RegistryObject<Block> BLACKSTONE_3 = BLOCKS.register("c3_blackstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> BLACKSTONE_3_ITEM = ITEMS.register("c3_blackstone", () -> new BlockItem(BLACKSTONE_3.get(), PROPERTIES));
    public static final RegistryObject<Block> BLACKSTONE_4 = BLOCKS.register("c4_blackstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> BLACKSTONE_4_ITEM = ITEMS.register("c4_blackstone", () -> new BlockItem(BLACKSTONE_4.get(), PROPERTIES));
    public static final RegistryObject<Block> BLACKSTONE_5 = BLOCKS.register("c5_blackstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> BLACKSTONE_5_ITEM = ITEMS.register("c5_blackstone", () -> new BlockItem(BLACKSTONE_5.get(), PROPERTIES));
    public static final RegistryObject<Block> BLACKSTONE_6 = BLOCKS.register("c6_blackstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> BLACKSTONE_6_ITEM = ITEMS.register("c6_blackstone", () -> new BlockItem(BLACKSTONE_6.get(), PROPERTIES));
    public static final RegistryObject<Block> BLACKSTONE_7 = BLOCKS.register("c7_blackstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> BLACKSTONE_7_ITEM = ITEMS.register("c7_blackstone", () -> new BlockItem(BLACKSTONE_7.get(), PROPERTIES));
    public static final RegistryObject<Block> BLACKSTONE_8 = BLOCKS.register("c8_blackstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> BLACKSTONE_8_ITEM = ITEMS.register("c8_blackstone", () -> new BlockItem(BLACKSTONE_8.get(), PROPERTIES));
    public static final RegistryObject<Block> BLACKSTONE_9 = BLOCKS.register("c9_blackstone", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> BLACKSTONE_9_ITEM = ITEMS.register("c9_blackstone", () -> new BlockItem(BLACKSTONE_9.get(), PROPERTIES));
    public static final RegistryObject<Block> DEEPSLATE_0 = BLOCKS.register("c0_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(2.0F, 10.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> DEEPSLATE_0_ITEM = ITEMS.register("c0_deepslate", () -> new BlockItem(DEEPSLATE_0.get(), PROPERTIES));
    public static final RegistryObject<Block> DEEPSLATE_1 = BLOCKS.register("c1_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(3.5F, 20.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> DEEPSLATE_1_ITEM = ITEMS.register("c1_deepslate", () -> new BlockItem(DEEPSLATE_1.get(), PROPERTIES));
    public static final RegistryObject<Block> DEEPSLATE_2 = BLOCKS.register("c2_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(7.0F, 60.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> DEEPSLATE_2_ITEM = ITEMS.register("c2_deepslate", () -> new BlockItem(DEEPSLATE_2.get(), PROPERTIES));
    public static final RegistryObject<Block> DEEPSLATE_3 = BLOCKS.register("c3_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(12.5F, 150.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> DEEPSLATE_3_ITEM = ITEMS.register("c3_deepslate", () -> new BlockItem(DEEPSLATE_3.get(), PROPERTIES));
    public static final RegistryObject<Block> DEEPSLATE_4 = BLOCKS.register("c4_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(15.0F, 300.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> DEEPSLATE_4_ITEM = ITEMS.register("c4_deepslate", () -> new BlockItem(DEEPSLATE_4.get(), PROPERTIES));
    public static final RegistryObject<Block> DEEPSLATE_5 = BLOCKS.register("c5_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(18.5F, 500.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> DEEPSLATE_5_ITEM = ITEMS.register("c5_deepslate", () -> new BlockItem(DEEPSLATE_5.get(), PROPERTIES));
    public static final RegistryObject<Block> DEEPSLATE_6 = BLOCKS.register("c6_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(20.5F, 850.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> DEEPSLATE_6_ITEM = ITEMS.register("c6_deepslate", () -> new BlockItem(DEEPSLATE_6.get(), PROPERTIES));
    public static final RegistryObject<Block> DEEPSLATE_7 = BLOCKS.register("c7_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(35.5F, 1200.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> DEEPSLATE_7_ITEM = ITEMS.register("c7_deepslate", () -> new BlockItem(DEEPSLATE_7.get(), PROPERTIES));
    public static final RegistryObject<Block> DEEPSLATE_8 = BLOCKS.register("c8_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(45.0F, 2000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> DEEPSLATE_8_ITEM = ITEMS.register("c8_deepslate", () -> new BlockItem(DEEPSLATE_8.get(), PROPERTIES));
    public static final RegistryObject<Block> DEEPSLATE_9 = BLOCKS.register("c9_deepslate", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.DEEPSLATE).strength(55.0F, 5000.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Item> DEEPSLATE_9_ITEM = ITEMS.register("c9_deepslate", () -> new BlockItem(DEEPSLATE_9.get(), PROPERTIES));
    public static ArrayList<RegistryObject<Item>> APPLES = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> ARROWS = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> BEETROOT = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> BEETROOT_SEEDS = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> BLAZE_POWDER = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> BLAZE_RODS = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> BONES = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> CARROTS = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> EGGS = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> ENDER_EYES = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> ENDER_PEARLS = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> FEATHERS = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> LEATHER = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> MELONS = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> POTATOES = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> SUGAR_CANE = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> MELON_SEEDS = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> PUMPKIN = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> PUMPKIN_SEEDS = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> WHEAT_SEEDS = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> SPIDER_EYES = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> STRINGS = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> STICKS = new ArrayList<>();
    public static ArrayList<RegistryObject<Item>> SUGAR = new ArrayList<>();

    public static void register() {
        BLOCKS.register(eventBus);
        ITEMS.register(eventBus);
        registerItems();
        DistExecutor.unsafeRunWhenOn(Dist.CLIENT, () -> () -> FMLJavaModLoadingContext.get().getModEventBus().addListener(ModRegistryEvent::translucentRender));
    }

    private static void translucentRender(final FMLCommonSetupEvent e) {
        final RenderType TRANSLUCENT = RenderType.translucent();
        for (RegistryObject<Block> registryObject : BLOCKS.getEntries()) {
            ItemBlockRenderTypes.setRenderLayer(registryObject.get(), TRANSLUCENT);
        }
    }

    public static void populate() {
        APPLES.add(0, RegistryObject.of(Items.APPLE.getRegistryName(), ForgeRegistries.ITEMS));
        ARROWS.add(0, RegistryObject.of(Items.ARROW.getRegistryName(), ForgeRegistries.ITEMS));
        BEETROOT.add(0, RegistryObject.of(Items.BEETROOT.getRegistryName(), ForgeRegistries.ITEMS));
        BEETROOT_SEEDS.add(0, RegistryObject.of(Items.BEETROOT_SEEDS.getRegistryName(), ForgeRegistries.ITEMS));
        BLAZE_POWDER.add(0, RegistryObject.of(Items.BLAZE_POWDER.getRegistryName(), ForgeRegistries.ITEMS));
        BLAZE_RODS.add(0, RegistryObject.of(Items.BLAZE_ROD.getRegistryName(), ForgeRegistries.ITEMS));
        BONES.add(0, RegistryObject.of(Items.BONE.getRegistryName(), ForgeRegistries.ITEMS));
        CARROTS.add(0, RegistryObject.of(Items.CARROT.getRegistryName(), ForgeRegistries.ITEMS));
        EGGS.add(0, RegistryObject.of(Items.EGG.getRegistryName(), ForgeRegistries.ITEMS));
        ENDER_EYES.add(0, RegistryObject.of(Items.ENDER_EYE.getRegistryName(), ForgeRegistries.ITEMS));
        ENDER_PEARLS.add(0, RegistryObject.of(Items.ENDER_PEARL.getRegistryName(), ForgeRegistries.ITEMS));
        FEATHERS.add(0, RegistryObject.of(Items.FEATHER.getRegistryName(), ForgeRegistries.ITEMS));
        LEATHER.add(0, RegistryObject.of(Items.LEATHER.getRegistryName(), ForgeRegistries.ITEMS));
        MELONS.add(0, RegistryObject.of(Items.MELON.getRegistryName(), ForgeRegistries.ITEMS));
        POTATOES.add(0, RegistryObject.of(Items.POTATO.getRegistryName(), ForgeRegistries.ITEMS));
        SUGAR_CANE.add(0, RegistryObject.of(Items.SUGAR_CANE.getRegistryName(), ForgeRegistries.ITEMS));
        MELON_SEEDS.add(0, RegistryObject.of(Items.MELON_SEEDS.getRegistryName(), ForgeRegistries.ITEMS));
        PUMPKIN.add(0, RegistryObject.of(Items.PUMPKIN.getRegistryName(), ForgeRegistries.ITEMS));
        PUMPKIN_SEEDS.add(0, RegistryObject.of(Items.PUMPKIN_SEEDS.getRegistryName(), ForgeRegistries.ITEMS));
        WHEAT_SEEDS.add(0, RegistryObject.of(Items.WHEAT_SEEDS.getRegistryName(), ForgeRegistries.ITEMS));
        SPIDER_EYES.add(0, RegistryObject.of(Items.SPIDER_EYE.getRegistryName(), ForgeRegistries.ITEMS));
        STRINGS.add(0, RegistryObject.of(Items.STRING.getRegistryName(), ForgeRegistries.ITEMS));
        STICKS.add(0, RegistryObject.of(Items.STICK.getRegistryName(), ForgeRegistries.ITEMS));
        SUGAR.add(0, RegistryObject.of(Items.SUGAR.getRegistryName(), ForgeRegistries.ITEMS));
    }

    private static void registerCrateItems(ArrayList<RegistryObject<Item>> array, String registryName) {
        array.add(1, ModRegistryEvent.ITEMS.register("crated_" + registryName, () -> new BagItem(0, stringFormat(registryName))));
        array.add(2, ModRegistryEvent.ITEMS.register("double_crated_" + registryName, () -> new BagItem(1, stringFormat(registryName))));
        array.add(3, ModRegistryEvent.ITEMS.register("triple_crated_" + registryName, () -> new BagItem(2, stringFormat(registryName))));
        array.add(4, ModRegistryEvent.ITEMS.register("quadruple_crated_" + registryName, () -> new BagItem(3, stringFormat(registryName))));
        array.add(5, ModRegistryEvent.ITEMS.register("quintuple_crated_" + registryName, () -> new BagItem(4, stringFormat(registryName))));
        array.add(6, ModRegistryEvent.ITEMS.register("sextuple_crated_" + registryName, () -> new BagItem(5, stringFormat(registryName))));
        array.add(7, ModRegistryEvent.ITEMS.register("septuple_crated_" + registryName, () -> new BagItem(6, stringFormat(registryName))));
        array.add(8, ModRegistryEvent.ITEMS.register("octuple_crated_" + registryName, () -> new BagItem(7, stringFormat(registryName))));
        array.add(9, ModRegistryEvent.ITEMS.register("mega_crated_" + registryName, () -> new BagItem(8, stringFormat(registryName))));
        array.add(10, ModRegistryEvent.ITEMS.register("giga_crated_" + registryName, () -> new BagItem(9, stringFormat(registryName))));
    }

    private static void registerItems() {
        registerCrateItems(ModRegistryEvent.APPLES, "apples");
        registerCrateItems(ModRegistryEvent.ARROWS, "arrows");
        registerCrateItems(ModRegistryEvent.BEETROOT, "beetroots");
        registerCrateItems(ModRegistryEvent.BEETROOT_SEEDS, "beetroot_seeds");
        registerCrateItems(ModRegistryEvent.BLAZE_POWDER, "blaze_powder");
        registerCrateItems(ModRegistryEvent.BLAZE_RODS, "blaze_rods");
        registerCrateItems(ModRegistryEvent.BONES, "bones");
        registerCrateItems(ModRegistryEvent.CARROTS, "carrots");
        registerCrateItems(ModRegistryEvent.EGGS, "eggs");
        registerCrateItems(ModRegistryEvent.ENDER_EYES, "ender_eyes");
        registerCrateItems(ModRegistryEvent.ENDER_PEARLS, "ender_pearls");
        registerCrateItems(ModRegistryEvent.FEATHERS, "feathers");
        registerCrateItems(ModRegistryEvent.LEATHER, "leather");
        registerCrateItems(ModRegistryEvent.MELONS, "melons");
        registerCrateItems(ModRegistryEvent.POTATOES, "potatoes");
        registerCrateItems(ModRegistryEvent.SUGAR_CANE, "sugar_canes");
        registerCrateItems(ModRegistryEvent.MELON_SEEDS, "melon_seeds");
        registerCrateItems(ModRegistryEvent.PUMPKIN, "pumpkin");
        registerCrateItems(ModRegistryEvent.PUMPKIN_SEEDS, "pumpkin_seeds");
        registerCrateItems(ModRegistryEvent.WHEAT_SEEDS, "wheat_seeds");
        registerCrateItems(ModRegistryEvent.SPIDER_EYES, "spider_eyes");
        registerCrateItems(ModRegistryEvent.STRINGS, "strings");
        registerCrateItems(ModRegistryEvent.STICKS, "sticks");
        registerCrateItems(ModRegistryEvent.SUGAR, "sugar");
    }

    private static String stringFormat(String formatString) {
        formatString = formatString.replace("_", " ");
        String[] words = formatString.split("\\s");
        StringBuilder stringFormat = new StringBuilder();
        for (String str : words) {
            String first = str.substring(0, 1);
            String afterFirst = str.substring(1);
            stringFormat.append(first.toUpperCase()).append(afterFirst).append(" ");
        }
        return stringFormat.toString().trim();
    }
}
